using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AnvilPacker.Level.Versions
{
    public partial class LBlockState
    {
        private static readonly LBlockState[] STATE_CACHE = new LBlockState[4096]; //this is enough for all vanilla blocks

        static LBlockState()
        {
            for (int i = 0; i < STATE_CACHE.Length; i++) {
                STATE_CACHE[i] = new(i);
            }
            InitNames();
        }

        static void InitNames()
        {
            static void Reg(int blockId, int meta, string name)
            {
                STATE_CACHE[blockId << 4 | meta].Name = name;
            }

            //auto generated using optifine's flattening_ids.txt
            //TODO: some blocks are missing, and some contain unecessary properties.
            Reg(0, 0, "air");
            Reg(1, 0, "stone");
            Reg(1, 1, "granite");
            Reg(1, 2, "smooth_granite");
            Reg(1, 3, "diorite");
            Reg(1, 4, "smooth_diorite");
            Reg(1, 5, "andesite");
            Reg(1, 6, "smooth_andesite");
            Reg(2, 0, "grass");
            Reg(3, 0, "dirt");
            Reg(3, 1, "coarse_dirt");
            Reg(3, 2, "podzol");
            Reg(4, 0, "cobblestone");
            Reg(5, 0, "oak_planks");
            Reg(5, 1, "spruce_planks");
            Reg(5, 2, "birch_planks");
            Reg(5, 3, "jungle_planks");
            Reg(5, 4, "acacia_planks");
            Reg(5, 5, "dark_oak_planks");
            Reg(6, 0, "sapling[stage=0,type=oak]");
            Reg(6, 1, "sapling[stage=0,type=spruce]");
            Reg(6, 2, "sapling[stage=0,type=birch]");
            Reg(6, 3, "sapling[stage=0,type=jungle]");
            Reg(6, 4, "sapling[stage=0,type=acacia]");
            Reg(6, 5, "sapling[stage=0,type=dark_oak]");
            Reg(6, 8, "sapling[stage=1,type=oak]");
            Reg(6, 9, "sapling[stage=1,type=spruce]");
            Reg(6, 10, "sapling[stage=1,type=birch]");
            Reg(6, 11, "sapling[stage=1,type=jungle]");
            Reg(6, 12, "sapling[stage=1,type=acacia]");
            Reg(6, 13, "sapling[stage=1,type=dark_oak]");
            Reg(7, 0, "bedrock");
            Reg(9, 0, "water[level=0]");
            Reg(9, 1, "water[level=1]");
            Reg(9, 2, "water[level=2]");
            Reg(9, 3, "water[level=3]");
            Reg(9, 4, "water[level=4]");
            Reg(9, 5, "water[level=5]");
            Reg(9, 6, "water[level=6]");
            Reg(9, 7, "water[level=7]");
            Reg(9, 8, "water[level=8]");
            Reg(9, 9, "water[level=9]");
            Reg(9, 10, "water[level=10]");
            Reg(9, 11, "water[level=11]");
            Reg(9, 12, "water[level=12]");
            Reg(9, 13, "water[level=13]");
            Reg(9, 14, "water[level=14]");
            Reg(9, 15, "water[level=15]");
            Reg(11, 0, "lava[level=0]");
            Reg(11, 1, "lava[level=1]");
            Reg(11, 2, "lava[level=2]");
            Reg(11, 3, "lava[level=3]");
            Reg(11, 4, "lava[level=4]");
            Reg(11, 5, "lava[level=5]");
            Reg(11, 6, "lava[level=6]");
            Reg(11, 7, "lava[level=7]");
            Reg(11, 8, "lava[level=8]");
            Reg(11, 9, "lava[level=9]");
            Reg(11, 10, "lava[level=10]");
            Reg(11, 11, "lava[level=11]");
            Reg(11, 12, "lava[level=12]");
            Reg(11, 13, "lava[level=13]");
            Reg(11, 14, "lava[level=14]");
            Reg(11, 15, "lava[level=15]");
            Reg(12, 0, "sand[variant=sand]");
            Reg(12, 1, "sand[variant=red_sand]");
            Reg(13, 0, "gravel");
            Reg(14, 0, "gold_ore");
            Reg(15, 0, "iron_ore");
            Reg(16, 0, "coal_ore");
            Reg(17, 0, "log[axis=y,variant=oak]");
            Reg(17, 1, "log[axis=y,variant=spruce]");
            Reg(17, 2, "log[axis=y,variant=birch]");
            Reg(17, 3, "log[axis=y,variant=jungle]");
            Reg(17, 4, "log[axis=x,variant=oak]");
            Reg(17, 5, "log[axis=x,variant=spruce]");
            Reg(17, 6, "log[axis=x,variant=birch]");
            Reg(17, 7, "log[axis=x,variant=jungle]");
            Reg(17, 8, "log[axis=z,variant=oak]");
            Reg(17, 9, "log[axis=z,variant=spruce]");
            Reg(17, 10, "log[axis=z,variant=birch]");
            Reg(17, 11, "log[axis=z,variant=jungle]");
            Reg(17, 12, "log[axis=none,variant=oak]");
            Reg(17, 13, "log[axis=none,variant=spruce]");
            Reg(17, 14, "log[axis=none,variant=birch]");
            Reg(17, 15, "log[axis=none,variant=jungle]");
            Reg(18, 0, "leaves[check_decay=false,decayable=true,variant=oak]");
            Reg(18, 1, "leaves[check_decay=false,decayable=true,variant=spruce]");
            Reg(18, 2, "leaves[check_decay=false,decayable=true,variant=birch]");
            Reg(18, 3, "leaves[check_decay=false,decayable=true,variant=jungle]");
            Reg(19, 0, "sponge[wet=false]");
            Reg(19, 1, "sponge[wet=true]");
            Reg(20, 0, "glass");
            Reg(21, 0, "lapis_ore");
            Reg(22, 0, "lapis_block");
            Reg(23, 0, "dispenser[facing=down,triggered=false]");
            Reg(23, 1, "dispenser[facing=up,triggered=false]");
            Reg(23, 2, "dispenser[facing=north,triggered=false]");
            Reg(23, 3, "dispenser[facing=south,triggered=false]");
            Reg(23, 4, "dispenser[facing=west,triggered=false]");
            Reg(23, 5, "dispenser[facing=east,triggered=false]");
            Reg(23, 8, "dispenser[facing=down,triggered=true]");
            Reg(23, 9, "dispenser[facing=up,triggered=true]");
            Reg(23, 10, "dispenser[facing=north,triggered=true]");
            Reg(23, 11, "dispenser[facing=south,triggered=true]");
            Reg(23, 12, "dispenser[facing=west,triggered=true]");
            Reg(23, 13, "dispenser[facing=east,triggered=true]");
            Reg(24, 0, "sandstone[type=sandstone]");
            Reg(24, 1, "sandstone[type=chiseled_sandstone]");
            Reg(24, 2, "sandstone[type=smooth_sandstone]");
            Reg(25, 0, "noteblock");
            Reg(26, 0, "bed[facing=south,occupied=false,part=foot]");
            Reg(26, 1, "bed[facing=west,occupied=false,part=foot]");
            Reg(26, 2, "bed[facing=north,occupied=false,part=foot]");
            Reg(26, 3, "bed[facing=east,occupied=false,part=foot]");
            Reg(26, 8, "bed[facing=south,occupied=false,part=head]");
            Reg(26, 9, "bed[facing=west,occupied=false,part=head]");
            Reg(26, 10, "bed[facing=north,occupied=false,part=head]");
            Reg(26, 11, "bed[facing=east,occupied=false,part=head]");
            Reg(26, 12, "bed[facing=south,occupied=true,part=head]");
            Reg(26, 13, "bed[facing=west,occupied=true,part=head]");
            Reg(26, 14, "bed[facing=north,occupied=true,part=head]");
            Reg(26, 15, "bed[facing=east,occupied=true,part=head]");
            Reg(27, 0, "golden_rail[powered=false,shape=north_south]");
            Reg(27, 1, "golden_rail[powered=false,shape=east_west]");
            Reg(27, 2, "golden_rail[powered=false,shape=ascending_east]");
            Reg(27, 3, "golden_rail[powered=false,shape=ascending_west]");
            Reg(27, 4, "golden_rail[powered=false,shape=ascending_north]");
            Reg(27, 5, "golden_rail[powered=false,shape=ascending_south]");
            Reg(27, 8, "golden_rail[powered=true,shape=north_south]");
            Reg(27, 9, "golden_rail[powered=true,shape=east_west]");
            Reg(27, 10, "golden_rail[powered=true,shape=ascending_east]");
            Reg(27, 11, "golden_rail[powered=true,shape=ascending_west]");
            Reg(27, 12, "golden_rail[powered=true,shape=ascending_north]");
            Reg(27, 13, "golden_rail[powered=true,shape=ascending_south]");
            Reg(28, 0, "detector_rail[powered=false,shape=north_south]");
            Reg(28, 1, "detector_rail[powered=false,shape=east_west]");
            Reg(28, 2, "detector_rail[powered=false,shape=ascending_east]");
            Reg(28, 3, "detector_rail[powered=false,shape=ascending_west]");
            Reg(28, 4, "detector_rail[powered=false,shape=ascending_north]");
            Reg(28, 5, "detector_rail[powered=false,shape=ascending_south]");
            Reg(28, 8, "detector_rail[powered=true,shape=north_south]");
            Reg(28, 9, "detector_rail[powered=true,shape=east_west]");
            Reg(28, 10, "detector_rail[powered=true,shape=ascending_east]");
            Reg(28, 11, "detector_rail[powered=true,shape=ascending_west]");
            Reg(28, 12, "detector_rail[powered=true,shape=ascending_north]");
            Reg(28, 13, "detector_rail[powered=true,shape=ascending_south]");
            Reg(29, 0, "sticky_piston[extended=false,facing=down]");
            Reg(29, 1, "sticky_piston[extended=false,facing=up]");
            Reg(29, 2, "sticky_piston[extended=false,facing=north]");
            Reg(29, 3, "sticky_piston[extended=false,facing=south]");
            Reg(29, 4, "sticky_piston[extended=false,facing=west]");
            Reg(29, 5, "sticky_piston[extended=false,facing=east]");
            Reg(29, 8, "sticky_piston[extended=true,facing=down]");
            Reg(29, 9, "sticky_piston[extended=true,facing=up]");
            Reg(29, 10, "sticky_piston[extended=true,facing=north]");
            Reg(29, 11, "sticky_piston[extended=true,facing=south]");
            Reg(29, 12, "sticky_piston[extended=true,facing=west]");
            Reg(29, 13, "sticky_piston[extended=true,facing=east]");
            Reg(30, 0, "web");
            Reg(31, 1, "tallgrass[type=tall_grass]");
            Reg(31, 2, "tallgrass[type=fern]");
            Reg(32, 0, "deadbush");
            Reg(33, 0, "piston[extended=false,facing=down]");
            Reg(33, 1, "piston[extended=false,facing=up]");
            Reg(33, 2, "piston[extended=false,facing=north]");
            Reg(33, 3, "piston[extended=false,facing=south]");
            Reg(33, 4, "piston[extended=false,facing=west]");
            Reg(33, 5, "piston[extended=false,facing=east]");
            Reg(33, 8, "piston[extended=true,facing=down]");
            Reg(33, 9, "piston[extended=true,facing=up]");
            Reg(33, 10, "piston[extended=true,facing=north]");
            Reg(33, 11, "piston[extended=true,facing=south]");
            Reg(33, 12, "piston[extended=true,facing=west]");
            Reg(33, 13, "piston[extended=true,facing=east]");
            Reg(34, 0, "piston_head[facing=down,short=false,type=normal]");
            Reg(34, 1, "piston_head[facing=up,short=false,type=normal]");
            Reg(34, 2, "piston_head[facing=north,short=false,type=normal]");
            Reg(34, 3, "piston_head[facing=south,short=false,type=normal]");
            Reg(34, 4, "piston_head[facing=west,short=false,type=normal]");
            Reg(34, 5, "piston_head[facing=east,short=false,type=normal]");
            Reg(34, 8, "piston_head[facing=down,short=false,type=sticky]");
            Reg(34, 9, "piston_head[facing=up,short=false,type=sticky]");
            Reg(34, 10, "piston_head[facing=north,short=false,type=sticky]");
            Reg(34, 11, "piston_head[facing=south,short=false,type=sticky]");
            Reg(34, 12, "piston_head[facing=west,short=false,type=sticky]");
            Reg(34, 13, "piston_head[facing=east,short=false,type=sticky]");
            Reg(35, 0, "wool[color=white]");
            Reg(35, 1, "wool[color=orange]");
            Reg(35, 2, "wool[color=magenta]");
            Reg(35, 3, "wool[color=light_blue]");
            Reg(35, 4, "wool[color=yellow]");
            Reg(35, 5, "wool[color=lime]");
            Reg(35, 6, "wool[color=pink]");
            Reg(35, 7, "wool[color=gray]");
            Reg(35, 8, "wool[color=silver]");
            Reg(35, 9, "wool[color=cyan]");
            Reg(35, 10, "wool[color=purple]");
            Reg(35, 11, "wool[color=blue]");
            Reg(35, 12, "wool[color=brown]");
            Reg(35, 13, "wool[color=green]");
            Reg(35, 14, "wool[color=red]");
            Reg(35, 15, "wool[color=black]");
            Reg(36, 0, "piston_extension[facing=down,type=normal]");
            Reg(36, 1, "piston_extension[facing=up,type=normal]");
            Reg(36, 2, "piston_extension[facing=north,type=normal]");
            Reg(36, 3, "piston_extension[facing=south,type=normal]");
            Reg(36, 4, "piston_extension[facing=west,type=normal]");
            Reg(36, 5, "piston_extension[facing=east,type=normal]");
            Reg(36, 8, "piston_extension[facing=down,type=sticky]");
            Reg(36, 9, "piston_extension[facing=up,type=sticky]");
            Reg(36, 10, "piston_extension[facing=north,type=sticky]");
            Reg(36, 11, "piston_extension[facing=south,type=sticky]");
            Reg(36, 12, "piston_extension[facing=west,type=sticky]");
            Reg(36, 13, "piston_extension[facing=east,type=sticky]");
            Reg(37, 0, "yellow_flower[type=dandelion]");
            Reg(38, 0, "red_flower[type=poppy]");
            Reg(38, 1, "red_flower[type=blue_orchid]");
            Reg(38, 2, "red_flower[type=allium]");
            Reg(38, 3, "red_flower[type=houstonia]");
            Reg(38, 4, "red_flower[type=red_tulip]");
            Reg(38, 5, "red_flower[type=orange_tulip]");
            Reg(38, 6, "red_flower[type=white_tulip]");
            Reg(38, 7, "red_flower[type=pink_tulip]");
            Reg(38, 8, "red_flower[type=oxeye_daisy]");
            Reg(39, 0, "brown_mushroom");
            Reg(40, 0, "red_mushroom");
            Reg(41, 0, "gold_block");
            Reg(42, 0, "iron_block");
            Reg(43, 0, "double_stone_slab[seamless=false,variant=stone]");
            Reg(43, 1, "double_stone_slab[seamless=false,variant=sandstone]");
            Reg(43, 2, "double_stone_slab[seamless=false,variant=wood_old]");
            Reg(43, 3, "double_stone_slab[seamless=false,variant=cobblestone]");
            Reg(43, 4, "double_stone_slab[seamless=false,variant=brick]");
            Reg(43, 5, "double_stone_slab[seamless=false,variant=stone_brick]");
            Reg(43, 6, "double_stone_slab[seamless=false,variant=nether_brick]");
            Reg(43, 7, "double_stone_slab[seamless=false,variant=quartz]");
            Reg(43, 8, "double_stone_slab[seamless=true,variant=stone]");
            Reg(43, 9, "double_stone_slab[seamless=true,variant=sandstone]");
            Reg(43, 15, "double_stone_slab[seamless=true,variant=quartz]");
            Reg(44, 0, "stone_slab[half=bottom,variant=stone]");
            Reg(44, 1, "stone_slab[half=bottom,variant=sandstone]");
            Reg(44, 2, "stone_slab[half=bottom,variant=wood_old]");
            Reg(44, 3, "stone_slab[half=bottom,variant=cobblestone]");
            Reg(44, 4, "stone_slab[half=bottom,variant=brick]");
            Reg(44, 5, "stone_slab[half=bottom,variant=stone_brick]");
            Reg(44, 6, "stone_slab[half=bottom,variant=nether_brick]");
            Reg(44, 7, "stone_slab[half=bottom,variant=quartz]");
            Reg(44, 8, "stone_slab[half=top,variant=stone]");
            Reg(44, 9, "stone_slab[half=top,variant=sandstone]");
            Reg(44, 10, "stone_slab[half=top,variant=wood_old]");
            Reg(44, 11, "stone_slab[half=top,variant=cobblestone]");
            Reg(44, 12, "stone_slab[half=top,variant=brick]");
            Reg(44, 13, "stone_slab[half=top,variant=stone_brick]");
            Reg(44, 14, "stone_slab[half=top,variant=nether_brick]");
            Reg(44, 15, "stone_slab[half=top,variant=quartz]");
            Reg(45, 0, "brick_block");
            Reg(46, 0, "tnt[explode=false]");
            Reg(46, 1, "tnt[explode=true]");
            Reg(47, 0, "bookshelf");
            Reg(48, 0, "mossy_cobblestone");
            Reg(49, 0, "obsidian");
            Reg(50, 1, "torch[facing=east]");
            Reg(50, 2, "torch[facing=west]");
            Reg(50, 3, "torch[facing=south]");
            Reg(50, 4, "torch[facing=north]");
            Reg(50, 5, "torch[facing=up]");
            Reg(51, 0, "fire[age=0]");
            Reg(51, 1, "fire[age=1]");
            Reg(51, 2, "fire[age=2]");
            Reg(51, 3, "fire[age=3]");
            Reg(51, 4, "fire[age=4]");
            Reg(51, 5, "fire[age=5]");
            Reg(51, 6, "fire[age=6]");
            Reg(51, 7, "fire[age=7]");
            Reg(51, 8, "fire[age=8]");
            Reg(51, 9, "fire[age=9]");
            Reg(51, 10, "fire[age=10]");
            Reg(51, 11, "fire[age=11]");
            Reg(51, 12, "fire[age=12]");
            Reg(51, 13, "fire[age=13]");
            Reg(51, 14, "fire[age=14]");
            Reg(51, 15, "fire[age=15]");
            Reg(52, 0, "mob_spawner");
            Reg(53, 0, "oak_stairs[facing=east,half=bottom,shape=inner_left]");
            Reg(53, 1, "oak_stairs[facing=west,half=bottom,shape=inner_left]");
            Reg(53, 2, "oak_stairs[facing=south,half=bottom,shape=inner_left]");
            Reg(53, 3, "oak_stairs[facing=north,half=bottom,shape=inner_left]");
            Reg(53, 4, "oak_stairs[facing=east,half=top,shape=inner_left]");
            Reg(53, 5, "oak_stairs[facing=west,half=top,shape=inner_left]");
            Reg(53, 6, "oak_stairs[facing=south,half=top,shape=inner_left]");
            Reg(53, 7, "oak_stairs[facing=north,half=top,shape=inner_left]");
            Reg(54, 2, "chest[facing=north]");
            Reg(54, 3, "chest[facing=south]");
            Reg(54, 4, "chest[facing=west]");
            Reg(54, 5, "chest[facing=east]");
            Reg(55, 0, "redstone_wire[east=none,north=none,power=0,south=none,west=none]");
            Reg(55, 1, "redstone_wire[east=none,north=none,power=1,south=none,west=none]");
            Reg(55, 2, "redstone_wire[east=none,north=none,power=2,south=none,west=none]");
            Reg(55, 3, "redstone_wire[east=none,north=none,power=3,south=none,west=none]");
            Reg(55, 4, "redstone_wire[east=none,north=none,power=4,south=none,west=none]");
            Reg(55, 5, "redstone_wire[east=none,north=none,power=5,south=none,west=none]");
            Reg(55, 6, "redstone_wire[east=none,north=none,power=6,south=none,west=none]");
            Reg(55, 7, "redstone_wire[east=none,north=none,power=7,south=none,west=none]");
            Reg(55, 8, "redstone_wire[east=none,north=none,power=8,south=none,west=none]");
            Reg(55, 9, "redstone_wire[east=none,north=none,power=9,south=none,west=none]");
            Reg(55, 10, "redstone_wire[east=none,north=none,power=10,south=none,west=none]");
            Reg(55, 11, "redstone_wire[east=none,north=none,power=11,south=none,west=none]");
            Reg(55, 12, "redstone_wire[east=none,north=none,power=12,south=none,west=none]");
            Reg(55, 13, "redstone_wire[east=none,north=none,power=13,south=none,west=none]");
            Reg(55, 14, "redstone_wire[east=none,north=none,power=14,south=none,west=none]");
            Reg(55, 15, "redstone_wire[east=none,north=none,power=15,south=none,west=none]");
            Reg(56, 0, "diamond_ore");
            Reg(57, 0, "diamond_block");
            Reg(58, 0, "crafting_table");
            Reg(59, 0, "wheat[age=0]");
            Reg(59, 1, "wheat[age=1]");
            Reg(59, 2, "wheat[age=2]");
            Reg(59, 3, "wheat[age=3]");
            Reg(59, 4, "wheat[age=4]");
            Reg(59, 5, "wheat[age=5]");
            Reg(59, 6, "wheat[age=6]");
            Reg(59, 7, "wheat[age=7]");
            Reg(60, 0, "farmland[moisture=0]");
            Reg(60, 1, "farmland[moisture=1]");
            Reg(60, 2, "farmland[moisture=2]");
            Reg(60, 3, "farmland[moisture=3]");
            Reg(60, 4, "farmland[moisture=4]");
            Reg(60, 5, "farmland[moisture=5]");
            Reg(60, 6, "farmland[moisture=6]");
            Reg(60, 7, "farmland[moisture=7]");
            Reg(61, 2, "furnace[facing=north]");
            Reg(61, 3, "furnace[facing=south]");
            Reg(61, 4, "furnace[facing=west]");
            Reg(61, 5, "furnace[facing=east]");
            Reg(62, 2, "lit_furnace[facing=north]");
            Reg(62, 3, "lit_furnace[facing=south]");
            Reg(62, 4, "lit_furnace[facing=west]");
            Reg(62, 5, "lit_furnace[facing=east]");
            Reg(63, 0, "standing_sign[rotation=0]");
            Reg(63, 1, "standing_sign[rotation=1]");
            Reg(63, 2, "standing_sign[rotation=2]");
            Reg(63, 3, "standing_sign[rotation=3]");
            Reg(63, 4, "standing_sign[rotation=4]");
            Reg(63, 5, "standing_sign[rotation=5]");
            Reg(63, 6, "standing_sign[rotation=6]");
            Reg(63, 7, "standing_sign[rotation=7]");
            Reg(63, 8, "standing_sign[rotation=8]");
            Reg(63, 9, "standing_sign[rotation=9]");
            Reg(63, 10, "standing_sign[rotation=10]");
            Reg(63, 11, "standing_sign[rotation=11]");
            Reg(63, 12, "standing_sign[rotation=12]");
            Reg(63, 13, "standing_sign[rotation=13]");
            Reg(63, 14, "standing_sign[rotation=14]");
            Reg(63, 15, "standing_sign[rotation=15]");
            Reg(64, 0, "wooden_door[facing=east,half=lower,hinge=left,open=false,powered=false]");
            Reg(64, 1, "wooden_door[facing=south,half=lower,hinge=left,open=false,powered=false]");
            Reg(64, 2, "wooden_door[facing=west,half=lower,hinge=left,open=false,powered=false]");
            Reg(64, 3, "wooden_door[facing=north,half=lower,hinge=left,open=false,powered=false]");
            Reg(64, 4, "wooden_door[facing=east,half=lower,hinge=left,open=true,powered=false]");
            Reg(64, 5, "wooden_door[facing=south,half=lower,hinge=left,open=true,powered=false]");
            Reg(64, 6, "wooden_door[facing=west,half=lower,hinge=left,open=true,powered=false]");
            Reg(64, 7, "wooden_door[facing=north,half=lower,hinge=left,open=true,powered=false]");
            Reg(64, 8, "wooden_door[facing=east,half=upper,hinge=left,open=false,powered=false]");
            Reg(64, 9, "wooden_door[facing=east,half=upper,hinge=right,open=false,powered=false]");
            Reg(64, 10, "wooden_door[facing=east,half=upper,hinge=left,open=false,powered=true]");
            Reg(64, 11, "wooden_door[facing=east,half=upper,hinge=right,open=false,powered=true]");
            Reg(65, 2, "ladder[facing=north]");
            Reg(65, 3, "ladder[facing=south]");
            Reg(65, 4, "ladder[facing=west]");
            Reg(65, 5, "ladder[facing=east]");
            Reg(66, 0, "rail[shape=north_south]");
            Reg(66, 1, "rail[shape=east_west]");
            Reg(66, 2, "rail[shape=ascending_east]");
            Reg(66, 3, "rail[shape=ascending_west]");
            Reg(66, 4, "rail[shape=ascending_north]");
            Reg(66, 5, "rail[shape=ascending_south]");
            Reg(66, 6, "rail[shape=south_east]");
            Reg(66, 7, "rail[shape=south_west]");
            Reg(66, 8, "rail[shape=north_west]");
            Reg(66, 9, "rail[shape=north_east]");
            Reg(67, 0, "stone_stairs[facing=east,half=bottom,shape=inner_left]");
            Reg(67, 1, "stone_stairs[facing=west,half=bottom,shape=inner_left]");
            Reg(67, 2, "stone_stairs[facing=south,half=bottom,shape=inner_left]");
            Reg(67, 3, "stone_stairs[facing=north,half=bottom,shape=inner_left]");
            Reg(67, 4, "stone_stairs[facing=east,half=top,shape=inner_left]");
            Reg(67, 5, "stone_stairs[facing=west,half=top,shape=inner_left]");
            Reg(67, 6, "stone_stairs[facing=south,half=top,shape=inner_left]");
            Reg(67, 7, "stone_stairs[facing=north,half=top,shape=inner_left]");
            Reg(68, 2, "wall_sign[facing=north]");
            Reg(68, 3, "wall_sign[facing=south]");
            Reg(68, 4, "wall_sign[facing=west]");
            Reg(68, 5, "wall_sign[facing=east]");
            Reg(69, 0, "lever[facing=down_x,powered=false]");
            Reg(69, 1, "lever[facing=east,powered=false]");
            Reg(69, 2, "lever[facing=west,powered=false]");
            Reg(69, 3, "lever[facing=south,powered=false]");
            Reg(69, 4, "lever[facing=north,powered=false]");
            Reg(69, 5, "lever[facing=up_z,powered=false]");
            Reg(69, 6, "lever[facing=up_x,powered=false]");
            Reg(69, 7, "lever[facing=down_z,powered=false]");
            Reg(69, 8, "lever[facing=down_x,powered=true]");
            Reg(69, 9, "lever[facing=east,powered=true]");
            Reg(69, 10, "lever[facing=west,powered=true]");
            Reg(69, 11, "lever[facing=south,powered=true]");
            Reg(69, 12, "lever[facing=north,powered=true]");
            Reg(69, 13, "lever[facing=up_z,powered=true]");
            Reg(69, 14, "lever[facing=up_x,powered=true]");
            Reg(69, 15, "lever[facing=down_z,powered=true]");
            Reg(70, 0, "stone_pressure_plate[powered=false]");
            Reg(70, 1, "stone_pressure_plate[powered=true]");
            Reg(71, 0, "iron_door[facing=east,half=lower,hinge=left,open=false,powered=false]");
            Reg(71, 1, "iron_door[facing=south,half=lower,hinge=left,open=false,powered=false]");
            Reg(71, 2, "iron_door[facing=west,half=lower,hinge=left,open=false,powered=false]");
            Reg(71, 3, "iron_door[facing=north,half=lower,hinge=left,open=false,powered=false]");
            Reg(71, 4, "iron_door[facing=east,half=lower,hinge=left,open=true,powered=false]");
            Reg(71, 5, "iron_door[facing=south,half=lower,hinge=left,open=true,powered=false]");
            Reg(71, 6, "iron_door[facing=west,half=lower,hinge=left,open=true,powered=false]");
            Reg(71, 7, "iron_door[facing=north,half=lower,hinge=left,open=true,powered=false]");
            Reg(71, 8, "iron_door[facing=east,half=upper,hinge=left,open=false,powered=false]");
            Reg(71, 9, "iron_door[facing=east,half=upper,hinge=right,open=false,powered=false]");
            Reg(71, 10, "iron_door[facing=east,half=upper,hinge=left,open=false,powered=true]");
            Reg(71, 11, "iron_door[facing=east,half=upper,hinge=right,open=false,powered=true]");
            Reg(72, 0, "wooden_pressure_plate[powered=false]");
            Reg(72, 1, "wooden_pressure_plate[powered=true]");
            Reg(73, 0, "redstone_ore");
            Reg(74, 0, "lit_redstone_ore");
            Reg(75, 1, "unlit_redstone_torch[facing=east]");
            Reg(75, 2, "unlit_redstone_torch[facing=west]");
            Reg(75, 3, "unlit_redstone_torch[facing=south]");
            Reg(75, 4, "unlit_redstone_torch[facing=north]");
            Reg(75, 5, "unlit_redstone_torch[facing=up]");
            Reg(76, 1, "redstone_torch[facing=east]");
            Reg(76, 2, "redstone_torch[facing=west]");
            Reg(76, 3, "redstone_torch[facing=south]");
            Reg(76, 4, "redstone_torch[facing=north]");
            Reg(76, 5, "redstone_torch[facing=up]");
            Reg(77, 0, "stone_button[facing=down,powered=false]");
            Reg(77, 1, "stone_button[facing=east,powered=false]");
            Reg(77, 2, "stone_button[facing=west,powered=false]");
            Reg(77, 3, "stone_button[facing=south,powered=false]");
            Reg(77, 4, "stone_button[facing=north,powered=false]");
            Reg(77, 5, "stone_button[facing=up,powered=false]");
            Reg(77, 8, "stone_button[facing=down,powered=true]");
            Reg(77, 9, "stone_button[facing=east,powered=true]");
            Reg(77, 10, "stone_button[facing=west,powered=true]");
            Reg(77, 11, "stone_button[facing=south,powered=true]");
            Reg(77, 12, "stone_button[facing=north,powered=true]");
            Reg(77, 13, "stone_button[facing=up,powered=true]");
            Reg(78, 0, "snow_layer[layers=1]");
            Reg(78, 1, "snow_layer[layers=2]");
            Reg(78, 2, "snow_layer[layers=3]");
            Reg(78, 3, "snow_layer[layers=4]");
            Reg(78, 4, "snow_layer[layers=5]");
            Reg(78, 5, "snow_layer[layers=6]");
            Reg(78, 6, "snow_layer[layers=7]");
            Reg(78, 7, "snow_layer[layers=8]");
            Reg(79, 0, "ice");
            Reg(80, 0, "snow");
            Reg(81, 0, "cactus[age=0]");
            Reg(81, 1, "cactus[age=1]");
            Reg(81, 2, "cactus[age=2]");
            Reg(81, 3, "cactus[age=3]");
            Reg(81, 4, "cactus[age=4]");
            Reg(81, 5, "cactus[age=5]");
            Reg(81, 6, "cactus[age=6]");
            Reg(81, 7, "cactus[age=7]");
            Reg(81, 8, "cactus[age=8]");
            Reg(81, 9, "cactus[age=9]");
            Reg(81, 10, "cactus[age=10]");
            Reg(81, 11, "cactus[age=11]");
            Reg(81, 12, "cactus[age=12]");
            Reg(81, 13, "cactus[age=13]");
            Reg(81, 14, "cactus[age=14]");
            Reg(81, 15, "cactus[age=15]");
            Reg(82, 0, "clay");
            Reg(83, 0, "reeds[age=0]");
            Reg(83, 1, "reeds[age=1]");
            Reg(83, 2, "reeds[age=2]");
            Reg(83, 3, "reeds[age=3]");
            Reg(83, 4, "reeds[age=4]");
            Reg(83, 5, "reeds[age=5]");
            Reg(83, 6, "reeds[age=6]");
            Reg(83, 7, "reeds[age=7]");
            Reg(83, 8, "reeds[age=8]");
            Reg(83, 9, "reeds[age=9]");
            Reg(83, 10, "reeds[age=10]");
            Reg(83, 11, "reeds[age=11]");
            Reg(83, 12, "reeds[age=12]");
            Reg(83, 13, "reeds[age=13]");
            Reg(83, 14, "reeds[age=14]");
            Reg(83, 15, "reeds[age=15]");
            Reg(84, 0, "jukebox[has_record=false]");
            Reg(84, 1, "jukebox[has_record=true]");
            Reg(85, 0, "fence");
            Reg(86, 0, "pumpkin[facing=south]");
            Reg(86, 1, "pumpkin[facing=west]");
            Reg(86, 2, "pumpkin[facing=north]");
            Reg(86, 3, "pumpkin[facing=east]");
            Reg(87, 0, "netherrack");
            Reg(88, 0, "soul_sand");
            Reg(89, 0, "glowstone");
            Reg(90, 1, "portal[axis=x]");
            Reg(90, 2, "portal[axis=z]");
            Reg(91, 0, "lit_pumpkin[facing=south]");
            Reg(91, 1, "lit_pumpkin[facing=west]");
            Reg(91, 2, "lit_pumpkin[facing=north]");
            Reg(91, 3, "lit_pumpkin[facing=east]");
            Reg(92, 0, "cake[bites=0]");
            Reg(92, 1, "cake[bites=1]");
            Reg(92, 2, "cake[bites=2]");
            Reg(92, 3, "cake[bites=3]");
            Reg(92, 4, "cake[bites=4]");
            Reg(92, 5, "cake[bites=5]");
            Reg(92, 6, "cake[bites=6]");
            Reg(93, 0, "unpowered_repeater[delay=1,facing=south,locked=false]");
            Reg(93, 1, "unpowered_repeater[delay=1,facing=west,locked=false]");
            Reg(93, 2, "unpowered_repeater[delay=1,facing=north,locked=false]");
            Reg(93, 3, "unpowered_repeater[delay=1,facing=east,locked=false]");
            Reg(93, 4, "unpowered_repeater[delay=2,facing=south,locked=false]");
            Reg(93, 5, "unpowered_repeater[delay=2,facing=west,locked=false]");
            Reg(93, 6, "unpowered_repeater[delay=2,facing=north,locked=false]");
            Reg(93, 7, "unpowered_repeater[delay=2,facing=east,locked=false]");
            Reg(93, 8, "unpowered_repeater[delay=3,facing=south,locked=false]");
            Reg(93, 9, "unpowered_repeater[delay=3,facing=west,locked=false]");
            Reg(93, 10, "unpowered_repeater[delay=3,facing=north,locked=false]");
            Reg(93, 11, "unpowered_repeater[delay=3,facing=east,locked=false]");
            Reg(93, 12, "unpowered_repeater[delay=4,facing=south,locked=false]");
            Reg(93, 13, "unpowered_repeater[delay=4,facing=west,locked=false]");
            Reg(93, 14, "unpowered_repeater[delay=4,facing=north,locked=false]");
            Reg(93, 15, "unpowered_repeater[delay=4,facing=east,locked=false]");
            Reg(94, 0, "powered_repeater[delay=1,facing=south,locked=false]");
            Reg(94, 1, "powered_repeater[delay=1,facing=west,locked=false]");
            Reg(94, 2, "powered_repeater[delay=1,facing=north,locked=false]");
            Reg(94, 3, "powered_repeater[delay=1,facing=east,locked=false]");
            Reg(94, 4, "powered_repeater[delay=2,facing=south,locked=false]");
            Reg(94, 5, "powered_repeater[delay=2,facing=west,locked=false]");
            Reg(94, 6, "powered_repeater[delay=2,facing=north,locked=false]");
            Reg(94, 7, "powered_repeater[delay=2,facing=east,locked=false]");
            Reg(94, 8, "powered_repeater[delay=3,facing=south,locked=false]");
            Reg(94, 9, "powered_repeater[delay=3,facing=west,locked=false]");
            Reg(94, 10, "powered_repeater[delay=3,facing=north,locked=false]");
            Reg(94, 11, "powered_repeater[delay=3,facing=east,locked=false]");
            Reg(94, 12, "powered_repeater[delay=4,facing=south,locked=false]");
            Reg(94, 13, "powered_repeater[delay=4,facing=west,locked=false]");
            Reg(94, 14, "powered_repeater[delay=4,facing=north,locked=false]");
            Reg(94, 15, "powered_repeater[delay=4,facing=east,locked=false]");
            Reg(95, 0, "stained_glass[color=white]");
            Reg(95, 1, "stained_glass[color=orange]");
            Reg(95, 2, "stained_glass[color=magenta]");
            Reg(95, 3, "stained_glass[color=light_blue]");
            Reg(95, 4, "stained_glass[color=yellow]");
            Reg(95, 5, "stained_glass[color=lime]");
            Reg(95, 6, "stained_glass[color=pink]");
            Reg(95, 7, "stained_glass[color=gray]");
            Reg(95, 8, "stained_glass[color=silver]");
            Reg(95, 9, "stained_glass[color=cyan]");
            Reg(95, 10, "stained_glass[color=purple]");
            Reg(95, 11, "stained_glass[color=blue]");
            Reg(95, 12, "stained_glass[color=brown]");
            Reg(95, 13, "stained_glass[color=green]");
            Reg(95, 14, "stained_glass[color=red]");
            Reg(95, 15, "stained_glass[color=black]");
            Reg(96, 0, "trapdoor[facing=north,half=bottom,open=false]");
            Reg(96, 1, "trapdoor[facing=south,half=bottom,open=false]");
            Reg(96, 2, "trapdoor[facing=west,half=bottom,open=false]");
            Reg(96, 3, "trapdoor[facing=east,half=bottom,open=false]");
            Reg(96, 4, "trapdoor[facing=north,half=bottom,open=true]");
            Reg(96, 5, "trapdoor[facing=south,half=bottom,open=true]");
            Reg(96, 6, "trapdoor[facing=west,half=bottom,open=true]");
            Reg(96, 7, "trapdoor[facing=east,half=bottom,open=true]");
            Reg(96, 8, "trapdoor[facing=north,half=top,open=false]");
            Reg(96, 9, "trapdoor[facing=south,half=top,open=false]");
            Reg(96, 10, "trapdoor[facing=west,half=top,open=false]");
            Reg(96, 11, "trapdoor[facing=east,half=top,open=false]");
            Reg(96, 12, "trapdoor[facing=north,half=top,open=true]");
            Reg(96, 13, "trapdoor[facing=south,half=top,open=true]");
            Reg(96, 14, "trapdoor[facing=west,half=top,open=true]");
            Reg(96, 15, "trapdoor[facing=east,half=top,open=true]");
            Reg(97, 0, "monster_egg[variant=stone]");
            Reg(97, 1, "monster_egg[variant=cobblestone]");
            Reg(97, 2, "monster_egg[variant=stone_brick]");
            Reg(97, 3, "monster_egg[variant=mossy_brick]");
            Reg(97, 4, "monster_egg[variant=cracked_brick]");
            Reg(97, 5, "monster_egg[variant=chiseled_brick]");
            Reg(98, 0, "stonebrick[variant=stonebrick]");
            Reg(98, 1, "stonebrick[variant=mossy_stonebrick]");
            Reg(98, 2, "stonebrick[variant=cracked_stonebrick]");
            Reg(98, 3, "stonebrick[variant=chiseled_stonebrick]");
            Reg(99, 0, "brown_mushroom_block[variant=all_inside]");
            Reg(99, 1, "brown_mushroom_block[variant=north_west]");
            Reg(99, 2, "brown_mushroom_block[variant=north]");
            Reg(99, 3, "brown_mushroom_block[variant=north_east]");
            Reg(99, 4, "brown_mushroom_block[variant=west]");
            Reg(99, 5, "brown_mushroom_block[variant=center]");
            Reg(99, 6, "brown_mushroom_block[variant=east]");
            Reg(99, 7, "brown_mushroom_block[variant=south_west]");
            Reg(99, 8, "brown_mushroom_block[variant=south]");
            Reg(99, 9, "brown_mushroom_block[variant=south_east]");
            Reg(99, 10, "brown_mushroom_block[variant=stem]");
            Reg(99, 14, "brown_mushroom_block[variant=all_outside]");
            Reg(99, 15, "brown_mushroom_block[variant=all_stem]");
            Reg(100, 0, "red_mushroom_block[variant=all_inside]");
            Reg(100, 1, "red_mushroom_block[variant=north_west]");
            Reg(100, 2, "red_mushroom_block[variant=north]");
            Reg(100, 3, "red_mushroom_block[variant=north_east]");
            Reg(100, 4, "red_mushroom_block[variant=west]");
            Reg(100, 5, "red_mushroom_block[variant=center]");
            Reg(100, 6, "red_mushroom_block[variant=east]");
            Reg(100, 7, "red_mushroom_block[variant=south_west]");
            Reg(100, 8, "red_mushroom_block[variant=south]");
            Reg(100, 9, "red_mushroom_block[variant=south_east]");
            Reg(100, 14, "red_mushroom_block[variant=all_outside]");
            Reg(101, 0, "iron_bars");
            Reg(102, 0, "glass_pane");
            Reg(103, 0, "melon_block");
            Reg(104, 0, "pumpkin_stem[age=0,facing=east]");
            Reg(104, 1, "pumpkin_stem[age=1,facing=east]");
            Reg(104, 2, "pumpkin_stem[age=2,facing=east]");
            Reg(104, 3, "pumpkin_stem[age=3,facing=east]");
            Reg(104, 4, "pumpkin_stem[age=4,facing=east]");
            Reg(104, 5, "pumpkin_stem[age=5,facing=east]");
            Reg(104, 6, "pumpkin_stem[age=6,facing=east]");
            Reg(104, 7, "pumpkin_stem[age=7,facing=east]");
            Reg(105, 0, "melon_stem[age=0,facing=east]");
            Reg(105, 1, "melon_stem[age=1,facing=east]");
            Reg(105, 2, "melon_stem[age=2,facing=east]");
            Reg(105, 3, "melon_stem[age=3,facing=east]");
            Reg(105, 4, "melon_stem[age=4,facing=east]");
            Reg(105, 5, "melon_stem[age=5,facing=east]");
            Reg(105, 6, "melon_stem[age=6,facing=east]");
            Reg(105, 7, "melon_stem[age=7,facing=east]");
            Reg(106, 0, "vine[east=false,north=false,south=false,up=false,west=false]");
            Reg(106, 1, "vine[east=false,north=false,south=true,up=false,west=false]");
            Reg(106, 2, "vine[east=false,north=false,south=false,up=false,west=true]");
            Reg(106, 3, "vine[east=false,north=false,south=true,up=false,west=true]");
            Reg(106, 4, "vine[east=false,north=true,south=false,up=false,west=false]");
            Reg(106, 5, "vine[east=false,north=true,south=true,up=false,west=false]");
            Reg(106, 6, "vine[east=false,north=true,south=false,up=false,west=true]");
            Reg(106, 7, "vine[east=false,north=true,south=true,up=false,west=true]");
            Reg(106, 8, "vine[east=true,north=false,south=false,up=false,west=false]");
            Reg(106, 9, "vine[east=true,north=false,south=true,up=false,west=false]");
            Reg(106, 10, "vine[east=true,north=false,south=false,up=false,west=true]");
            Reg(106, 11, "vine[east=true,north=false,south=true,up=false,west=true]");
            Reg(106, 12, "vine[east=true,north=true,south=false,up=false,west=false]");
            Reg(106, 13, "vine[east=true,north=true,south=true,up=false,west=false]");
            Reg(106, 14, "vine[east=true,north=true,south=false,up=false,west=true]");
            Reg(106, 15, "vine[east=true,north=true,south=true,up=false,west=true]");
            Reg(107, 0, "fence_gate[facing=south,in_wall=false,open=false,powered=false]");
            Reg(107, 1, "fence_gate[facing=west,in_wall=false,open=false,powered=false]");
            Reg(107, 2, "fence_gate[facing=north,in_wall=false,open=false,powered=false]");
            Reg(107, 3, "fence_gate[facing=east,in_wall=false,open=false,powered=false]");
            Reg(107, 4, "fence_gate[facing=south,in_wall=false,open=true,powered=false]");
            Reg(107, 5, "fence_gate[facing=west,in_wall=false,open=true,powered=false]");
            Reg(107, 6, "fence_gate[facing=north,in_wall=false,open=true,powered=false]");
            Reg(107, 7, "fence_gate[facing=east,in_wall=false,open=true,powered=false]");
            Reg(107, 8, "fence_gate[facing=south,in_wall=false,open=false,powered=true]");
            Reg(107, 9, "fence_gate[facing=west,in_wall=false,open=false,powered=true]");
            Reg(107, 10, "fence_gate[facing=north,in_wall=false,open=false,powered=true]");
            Reg(107, 11, "fence_gate[facing=east,in_wall=false,open=false,powered=true]");
            Reg(107, 12, "fence_gate[facing=south,in_wall=false,open=true,powered=true]");
            Reg(107, 13, "fence_gate[facing=west,in_wall=false,open=true,powered=true]");
            Reg(107, 14, "fence_gate[facing=north,in_wall=false,open=true,powered=true]");
            Reg(107, 15, "fence_gate[facing=east,in_wall=false,open=true,powered=true]");
            Reg(108, 0, "brick_stairs[facing=east,half=bottom,shape=inner_left]");
            Reg(108, 1, "brick_stairs[facing=west,half=bottom,shape=inner_left]");
            Reg(108, 2, "brick_stairs[facing=south,half=bottom,shape=inner_left]");
            Reg(108, 3, "brick_stairs[facing=north,half=bottom,shape=inner_left]");
            Reg(108, 4, "brick_stairs[facing=east,half=top,shape=inner_left]");
            Reg(108, 5, "brick_stairs[facing=west,half=top,shape=inner_left]");
            Reg(108, 6, "brick_stairs[facing=south,half=top,shape=inner_left]");
            Reg(108, 7, "brick_stairs[facing=north,half=top,shape=inner_left]");
            Reg(109, 0, "stone_brick_stairs[facing=east,half=bottom,shape=inner_left]");
            Reg(109, 1, "stone_brick_stairs[facing=west,half=bottom,shape=inner_left]");
            Reg(109, 2, "stone_brick_stairs[facing=south,half=bottom,shape=inner_left]");
            Reg(109, 3, "stone_brick_stairs[facing=north,half=bottom,shape=inner_left]");
            Reg(109, 4, "stone_brick_stairs[facing=east,half=top,shape=inner_left]");
            Reg(109, 5, "stone_brick_stairs[facing=west,half=top,shape=inner_left]");
            Reg(109, 6, "stone_brick_stairs[facing=south,half=top,shape=inner_left]");
            Reg(109, 7, "stone_brick_stairs[facing=north,half=top,shape=inner_left]");
            Reg(110, 0, "mycelium");
            Reg(111, 0, "waterlily");
            Reg(112, 0, "nether_brick");
            Reg(113, 0, "nether_brick_fence");
            Reg(114, 0, "nether_brick_stairs[facing=east,half=bottom,shape=inner_left]");
            Reg(114, 1, "nether_brick_stairs[facing=west,half=bottom,shape=inner_left]");
            Reg(114, 2, "nether_brick_stairs[facing=south,half=bottom,shape=inner_left]");
            Reg(114, 3, "nether_brick_stairs[facing=north,half=bottom,shape=inner_left]");
            Reg(114, 4, "nether_brick_stairs[facing=east,half=top,shape=inner_left]");
            Reg(114, 5, "nether_brick_stairs[facing=west,half=top,shape=inner_left]");
            Reg(114, 6, "nether_brick_stairs[facing=south,half=top,shape=inner_left]");
            Reg(114, 7, "nether_brick_stairs[facing=north,half=top,shape=inner_left]");
            Reg(115, 0, "nether_wart[age=0]");
            Reg(115, 1, "nether_wart[age=1]");
            Reg(115, 2, "nether_wart[age=2]");
            Reg(115, 3, "nether_wart[age=3]");
            Reg(116, 0, "enchanting_table");
            Reg(117, 0, "brewing_stand[has_bottle_0=false,has_bottle_1=false,has_bottle_2=false]");
            Reg(117, 1, "brewing_stand[has_bottle_0=true,has_bottle_1=false,has_bottle_2=false]");
            Reg(117, 2, "brewing_stand[has_bottle_0=false,has_bottle_1=true,has_bottle_2=false]");
            Reg(117, 3, "brewing_stand[has_bottle_0=true,has_bottle_1=true,has_bottle_2=false]");
            Reg(117, 4, "brewing_stand[has_bottle_0=false,has_bottle_1=false,has_bottle_2=true]");
            Reg(117, 5, "brewing_stand[has_bottle_0=true,has_bottle_1=false,has_bottle_2=true]");
            Reg(117, 6, "brewing_stand[has_bottle_0=false,has_bottle_1=true,has_bottle_2=true]");
            Reg(117, 7, "brewing_stand[has_bottle_0=true,has_bottle_1=true,has_bottle_2=true]");
            Reg(118, 0, "cauldron[level=0]");
            Reg(118, 1, "cauldron[level=1]");
            Reg(118, 2, "cauldron[level=2]");
            Reg(118, 3, "cauldron[level=3]");
            Reg(119, 0, "end_portal");
            Reg(120, 0, "end_portal_frame[eye=false,facing=south]");
            Reg(120, 1, "end_portal_frame[eye=false,facing=west]");
            Reg(120, 2, "end_portal_frame[eye=false,facing=north]");
            Reg(120, 3, "end_portal_frame[eye=false,facing=east]");
            Reg(120, 4, "end_portal_frame[eye=true,facing=south]");
            Reg(120, 5, "end_portal_frame[eye=true,facing=west]");
            Reg(120, 6, "end_portal_frame[eye=true,facing=north]");
            Reg(120, 7, "end_portal_frame[eye=true,facing=east]");
            Reg(121, 0, "end_stone");
            Reg(122, 0, "dragon_egg");
            Reg(123, 0, "redstone_lamp");
            Reg(124, 0, "lit_redstone_lamp");
            Reg(125, 0, "double_wooden_slab[variant=oak]");
            Reg(125, 1, "double_wooden_slab[variant=spruce]");
            Reg(125, 2, "double_wooden_slab[variant=birch]");
            Reg(125, 3, "double_wooden_slab[variant=jungle]");
            Reg(125, 4, "double_wooden_slab[variant=acacia]");
            Reg(125, 5, "double_wooden_slab[variant=dark_oak]");
            Reg(126, 0, "wooden_slab[half=bottom,variant=oak]");
            Reg(126, 1, "wooden_slab[half=bottom,variant=spruce]");
            Reg(126, 2, "wooden_slab[half=bottom,variant=birch]");
            Reg(126, 3, "wooden_slab[half=bottom,variant=jungle]");
            Reg(126, 4, "wooden_slab[half=bottom,variant=acacia]");
            Reg(126, 5, "wooden_slab[half=bottom,variant=dark_oak]");
            Reg(126, 8, "wooden_slab[half=top,variant=oak]");
            Reg(126, 9, "wooden_slab[half=top,variant=spruce]");
            Reg(126, 10, "wooden_slab[half=top,variant=birch]");
            Reg(126, 11, "wooden_slab[half=top,variant=jungle]");
            Reg(126, 12, "wooden_slab[half=top,variant=acacia]");
            Reg(126, 13, "wooden_slab[half=top,variant=dark_oak]");
            Reg(127, 0, "cocoa[age=0,facing=south]");
            Reg(127, 1, "cocoa[age=0,facing=west]");
            Reg(127, 2, "cocoa[age=0,facing=north]");
            Reg(127, 3, "cocoa[age=0,facing=east]");
            Reg(127, 4, "cocoa[age=1,facing=south]");
            Reg(127, 5, "cocoa[age=1,facing=west]");
            Reg(127, 6, "cocoa[age=1,facing=north]");
            Reg(127, 7, "cocoa[age=1,facing=east]");
            Reg(127, 8, "cocoa[age=2,facing=south]");
            Reg(127, 9, "cocoa[age=2,facing=west]");
            Reg(127, 10, "cocoa[age=2,facing=north]");
            Reg(127, 11, "cocoa[age=2,facing=east]");
            Reg(128, 0, "sandstone_stairs[facing=east,half=bottom,shape=inner_left]");
            Reg(128, 1, "sandstone_stairs[facing=west,half=bottom,shape=inner_left]");
            Reg(128, 2, "sandstone_stairs[facing=south,half=bottom,shape=inner_left]");
            Reg(128, 3, "sandstone_stairs[facing=north,half=bottom,shape=inner_left]");
            Reg(128, 4, "sandstone_stairs[facing=east,half=top,shape=inner_left]");
            Reg(128, 5, "sandstone_stairs[facing=west,half=top,shape=inner_left]");
            Reg(128, 6, "sandstone_stairs[facing=south,half=top,shape=inner_left]");
            Reg(128, 7, "sandstone_stairs[facing=north,half=top,shape=inner_left]");
            Reg(129, 0, "emerald_ore");
            Reg(130, 2, "ender_chest[facing=north]");
            Reg(130, 3, "ender_chest[facing=south]");
            Reg(130, 4, "ender_chest[facing=west]");
            Reg(130, 5, "ender_chest[facing=east]");
            Reg(131, 0, "tripwire_hook[attached=false,facing=south,powered=false]");
            Reg(131, 1, "tripwire_hook[attached=false,facing=west,powered=false]");
            Reg(131, 2, "tripwire_hook[attached=false,facing=north,powered=false]");
            Reg(131, 3, "tripwire_hook[attached=false,facing=east,powered=false]");
            Reg(131, 4, "tripwire_hook[attached=true,facing=south,powered=false]");
            Reg(131, 5, "tripwire_hook[attached=true,facing=west,powered=false]");
            Reg(131, 6, "tripwire_hook[attached=true,facing=north,powered=false]");
            Reg(131, 7, "tripwire_hook[attached=true,facing=east,powered=false]");
            Reg(131, 8, "tripwire_hook[attached=false,facing=south,powered=true]");
            Reg(131, 9, "tripwire_hook[attached=false,facing=west,powered=true]");
            Reg(131, 10, "tripwire_hook[attached=false,facing=north,powered=true]");
            Reg(131, 11, "tripwire_hook[attached=false,facing=east,powered=true]");
            Reg(131, 12, "tripwire_hook[attached=true,facing=south,powered=true]");
            Reg(131, 13, "tripwire_hook[attached=true,facing=west,powered=true]");
            Reg(131, 14, "tripwire_hook[attached=true,facing=north,powered=true]");
            Reg(131, 15, "tripwire_hook[attached=true,facing=east,powered=true]");
            Reg(132, 0, "tripwire[attached=false,disarmed=false,east=false,north=false,powered=false,south=false,west=false]");
            Reg(132, 1, "tripwire[attached=false,disarmed=false,east=false,north=false,powered=true,south=false,west=false]");
            Reg(132, 4, "tripwire[attached=true,disarmed=false,east=false,north=false,powered=false,south=false,west=false]");
            Reg(132, 5, "tripwire[attached=true,disarmed=false,east=false,north=false,powered=true,south=false,west=false]");
            Reg(132, 8, "tripwire[attached=false,disarmed=true,east=false,north=false,powered=false,south=false,west=false]");
            Reg(132, 9, "tripwire[attached=false,disarmed=true,east=false,north=false,powered=true,south=false,west=false]");
            Reg(132, 12, "tripwire[attached=true,disarmed=true,east=false,north=false,powered=false,south=false,west=false]");
            Reg(132, 13, "tripwire[attached=true,disarmed=true,east=false,north=false,powered=true,south=false,west=false]");
            Reg(133, 0, "emerald_block");
            Reg(134, 0, "spruce_stairs[facing=east,half=bottom,shape=inner_left]");
            Reg(134, 1, "spruce_stairs[facing=west,half=bottom,shape=inner_left]");
            Reg(134, 2, "spruce_stairs[facing=south,half=bottom,shape=inner_left]");
            Reg(134, 3, "spruce_stairs[facing=north,half=bottom,shape=inner_left]");
            Reg(134, 4, "spruce_stairs[facing=east,half=top,shape=inner_left]");
            Reg(134, 5, "spruce_stairs[facing=west,half=top,shape=inner_left]");
            Reg(134, 6, "spruce_stairs[facing=south,half=top,shape=inner_left]");
            Reg(134, 7, "spruce_stairs[facing=north,half=top,shape=inner_left]");
            Reg(135, 0, "birch_stairs[facing=east,half=bottom,shape=inner_left]");
            Reg(135, 1, "birch_stairs[facing=west,half=bottom,shape=inner_left]");
            Reg(135, 2, "birch_stairs[facing=south,half=bottom,shape=inner_left]");
            Reg(135, 3, "birch_stairs[facing=north,half=bottom,shape=inner_left]");
            Reg(135, 4, "birch_stairs[facing=east,half=top,shape=inner_left]");
            Reg(135, 5, "birch_stairs[facing=west,half=top,shape=inner_left]");
            Reg(135, 6, "birch_stairs[facing=south,half=top,shape=inner_left]");
            Reg(135, 7, "birch_stairs[facing=north,half=top,shape=inner_left]");
            Reg(136, 0, "jungle_stairs[facing=east,half=bottom,shape=inner_left]");
            Reg(136, 1, "jungle_stairs[facing=west,half=bottom,shape=inner_left]");
            Reg(136, 2, "jungle_stairs[facing=south,half=bottom,shape=inner_left]");
            Reg(136, 3, "jungle_stairs[facing=north,half=bottom,shape=inner_left]");
            Reg(136, 4, "jungle_stairs[facing=east,half=top,shape=inner_left]");
            Reg(136, 5, "jungle_stairs[facing=west,half=top,shape=inner_left]");
            Reg(136, 6, "jungle_stairs[facing=south,half=top,shape=inner_left]");
            Reg(136, 7, "jungle_stairs[facing=north,half=top,shape=inner_left]");
            Reg(137, 0, "command_block[conditional=false,facing=down]");
            Reg(137, 1, "command_block[conditional=false,facing=up]");
            Reg(137, 2, "command_block[conditional=false,facing=north]");
            Reg(137, 3, "command_block[conditional=false,facing=south]");
            Reg(137, 4, "command_block[conditional=false,facing=west]");
            Reg(137, 5, "command_block[conditional=false,facing=east]");
            Reg(137, 8, "command_block[conditional=true,facing=down]");
            Reg(137, 9, "command_block[conditional=true,facing=up]");
            Reg(137, 10, "command_block[conditional=true,facing=north]");
            Reg(137, 11, "command_block[conditional=true,facing=south]");
            Reg(137, 12, "command_block[conditional=true,facing=west]");
            Reg(137, 13, "command_block[conditional=true,facing=east]");
            Reg(138, 0, "beacon");
            Reg(139, 0, "cobblestone_wall");
            Reg(139, 1, "cobblestone_wall");
            Reg(140, 8, "flower_pot[contents=cactus,legacy_data=8]");
            Reg(141, 0, "carrots[age=0]");
            Reg(141, 1, "carrots[age=1]");
            Reg(141, 2, "carrots[age=2]");
            Reg(141, 3, "carrots[age=3]");
            Reg(141, 4, "carrots[age=4]");
            Reg(141, 5, "carrots[age=5]");
            Reg(141, 6, "carrots[age=6]");
            Reg(141, 7, "carrots[age=7]");
            Reg(142, 0, "potatoes[age=0]");
            Reg(142, 1, "potatoes[age=1]");
            Reg(142, 2, "potatoes[age=2]");
            Reg(142, 3, "potatoes[age=3]");
            Reg(142, 4, "potatoes[age=4]");
            Reg(142, 5, "potatoes[age=5]");
            Reg(142, 6, "potatoes[age=6]");
            Reg(142, 7, "potatoes[age=7]");
            Reg(143, 0, "wooden_button[facing=down,powered=false]");
            Reg(143, 1, "wooden_button[facing=east,powered=false]");
            Reg(143, 2, "wooden_button[facing=west,powered=false]");
            Reg(143, 3, "wooden_button[facing=south,powered=false]");
            Reg(143, 4, "wooden_button[facing=north,powered=false]");
            Reg(143, 5, "wooden_button[facing=up,powered=false]");
            Reg(143, 8, "wooden_button[facing=down,powered=true]");
            Reg(143, 9, "wooden_button[facing=east,powered=true]");
            Reg(143, 10, "wooden_button[facing=west,powered=true]");
            Reg(143, 11, "wooden_button[facing=south,powered=true]");
            Reg(143, 12, "wooden_button[facing=north,powered=true]");
            Reg(143, 13, "wooden_button[facing=up,powered=true]");
            Reg(145, 0, "anvil[damage=0,facing=south]");
            Reg(145, 1, "anvil[damage=0,facing=west]");
            Reg(145, 2, "anvil[damage=0,facing=north]");
            Reg(145, 3, "anvil[damage=0,facing=east]");
            Reg(145, 4, "anvil[damage=1,facing=south]");
            Reg(145, 5, "anvil[damage=1,facing=west]");
            Reg(145, 6, "anvil[damage=1,facing=north]");
            Reg(145, 7, "anvil[damage=1,facing=east]");
            Reg(145, 8, "anvil[damage=2,facing=south]");
            Reg(145, 9, "anvil[damage=2,facing=west]");
            Reg(145, 10, "anvil[damage=2,facing=north]");
            Reg(145, 11, "anvil[damage=2,facing=east]");
            Reg(146, 2, "trapped_chest[facing=north]");
            Reg(146, 3, "trapped_chest[facing=south]");
            Reg(146, 4, "trapped_chest[facing=west]");
            Reg(146, 5, "trapped_chest[facing=east]");
            Reg(147, 0, "light_weighted_pressure_plate[power=0]");
            Reg(147, 1, "light_weighted_pressure_plate[power=1]");
            Reg(147, 2, "light_weighted_pressure_plate[power=2]");
            Reg(147, 3, "light_weighted_pressure_plate[power=3]");
            Reg(147, 4, "light_weighted_pressure_plate[power=4]");
            Reg(147, 5, "light_weighted_pressure_plate[power=5]");
            Reg(147, 6, "light_weighted_pressure_plate[power=6]");
            Reg(147, 7, "light_weighted_pressure_plate[power=7]");
            Reg(147, 8, "light_weighted_pressure_plate[power=8]");
            Reg(147, 9, "light_weighted_pressure_plate[power=9]");
            Reg(147, 10, "light_weighted_pressure_plate[power=10]");
            Reg(147, 11, "light_weighted_pressure_plate[power=11]");
            Reg(147, 12, "light_weighted_pressure_plate[power=12]");
            Reg(147, 13, "light_weighted_pressure_plate[power=13]");
            Reg(147, 14, "light_weighted_pressure_plate[power=14]");
            Reg(147, 15, "light_weighted_pressure_plate[power=15]");
            Reg(148, 0, "heavy_weighted_pressure_plate[power=0]");
            Reg(148, 1, "heavy_weighted_pressure_plate[power=1]");
            Reg(148, 2, "heavy_weighted_pressure_plate[power=2]");
            Reg(148, 3, "heavy_weighted_pressure_plate[power=3]");
            Reg(148, 4, "heavy_weighted_pressure_plate[power=4]");
            Reg(148, 5, "heavy_weighted_pressure_plate[power=5]");
            Reg(148, 6, "heavy_weighted_pressure_plate[power=6]");
            Reg(148, 7, "heavy_weighted_pressure_plate[power=7]");
            Reg(148, 8, "heavy_weighted_pressure_plate[power=8]");
            Reg(148, 9, "heavy_weighted_pressure_plate[power=9]");
            Reg(148, 10, "heavy_weighted_pressure_plate[power=10]");
            Reg(148, 11, "heavy_weighted_pressure_plate[power=11]");
            Reg(148, 12, "heavy_weighted_pressure_plate[power=12]");
            Reg(148, 13, "heavy_weighted_pressure_plate[power=13]");
            Reg(148, 14, "heavy_weighted_pressure_plate[power=14]");
            Reg(148, 15, "heavy_weighted_pressure_plate[power=15]");
            Reg(149, 0, "unpowered_comparator[facing=south,mode=compare,powered=false]");
            Reg(149, 1, "unpowered_comparator[facing=west,mode=compare,powered=false]");
            Reg(149, 2, "unpowered_comparator[facing=north,mode=compare,powered=false]");
            Reg(149, 3, "unpowered_comparator[facing=east,mode=compare,powered=false]");
            Reg(149, 4, "unpowered_comparator[facing=south,mode=subtract,powered=false]");
            Reg(149, 5, "unpowered_comparator[facing=west,mode=subtract,powered=false]");
            Reg(149, 6, "unpowered_comparator[facing=north,mode=subtract,powered=false]");
            Reg(149, 7, "unpowered_comparator[facing=east,mode=subtract,powered=false]");
            Reg(149, 8, "unpowered_comparator[facing=south,mode=compare,powered=true]");
            Reg(149, 9, "unpowered_comparator[facing=west,mode=compare,powered=true]");
            Reg(149, 10, "unpowered_comparator[facing=north,mode=compare,powered=true]");
            Reg(149, 11, "unpowered_comparator[facing=east,mode=compare,powered=true]");
            Reg(149, 12, "unpowered_comparator[facing=south,mode=subtract,powered=true]");
            Reg(149, 13, "unpowered_comparator[facing=west,mode=subtract,powered=true]");
            Reg(149, 14, "unpowered_comparator[facing=north,mode=subtract,powered=true]");
            Reg(149, 15, "unpowered_comparator[facing=east,mode=subtract,powered=true]");
            Reg(151, 0, "daylight_detector[power=0]");
            Reg(151, 1, "daylight_detector[power=1]");
            Reg(151, 2, "daylight_detector[power=2]");
            Reg(151, 3, "daylight_detector[power=3]");
            Reg(151, 4, "daylight_detector[power=4]");
            Reg(151, 5, "daylight_detector[power=5]");
            Reg(151, 6, "daylight_detector[power=6]");
            Reg(151, 7, "daylight_detector[power=7]");
            Reg(151, 8, "daylight_detector[power=8]");
            Reg(151, 9, "daylight_detector[power=9]");
            Reg(151, 10, "daylight_detector[power=10]");
            Reg(151, 11, "daylight_detector[power=11]");
            Reg(151, 12, "daylight_detector[power=12]");
            Reg(151, 13, "daylight_detector[power=13]");
            Reg(151, 14, "daylight_detector[power=14]");
            Reg(151, 15, "daylight_detector[power=15]");
            Reg(152, 0, "redstone_block");
            Reg(153, 0, "quartz_ore");
            Reg(154, 0, "hopper[enabled=true,facing=down]");
            Reg(154, 2, "hopper[enabled=true,facing=north]");
            Reg(154, 3, "hopper[enabled=true,facing=south]");
            Reg(154, 4, "hopper[enabled=true,facing=west]");
            Reg(154, 5, "hopper[enabled=true,facing=east]");
            Reg(154, 8, "hopper[enabled=false,facing=down]");
            Reg(154, 10, "hopper[enabled=false,facing=north]");
            Reg(154, 11, "hopper[enabled=false,facing=south]");
            Reg(154, 12, "hopper[enabled=false,facing=west]");
            Reg(154, 13, "hopper[enabled=false,facing=east]");
            Reg(155, 0, "quartz_block[variant=default]");
            Reg(155, 1, "quartz_block[variant=chiseled]");
            Reg(155, 2, "quartz_block[variant=lines_y]");
            Reg(155, 3, "quartz_block[variant=lines_x]");
            Reg(155, 4, "quartz_block[variant=lines_z]");
            Reg(156, 0, "quartz_stairs[facing=east,half=bottom,shape=inner_left]");
            Reg(156, 1, "quartz_stairs[facing=west,half=bottom,shape=inner_left]");
            Reg(156, 2, "quartz_stairs[facing=south,half=bottom,shape=inner_left]");
            Reg(156, 3, "quartz_stairs[facing=north,half=bottom,shape=inner_left]");
            Reg(156, 4, "quartz_stairs[facing=east,half=top,shape=inner_left]");
            Reg(156, 5, "quartz_stairs[facing=west,half=top,shape=inner_left]");
            Reg(156, 6, "quartz_stairs[facing=south,half=top,shape=inner_left]");
            Reg(156, 7, "quartz_stairs[facing=north,half=top,shape=inner_left]");
            Reg(157, 0, "activator_rail[powered=false,shape=north_south]");
            Reg(157, 1, "activator_rail[powered=false,shape=east_west]");
            Reg(157, 2, "activator_rail[powered=false,shape=ascending_east]");
            Reg(157, 3, "activator_rail[powered=false,shape=ascending_west]");
            Reg(157, 4, "activator_rail[powered=false,shape=ascending_north]");
            Reg(157, 5, "activator_rail[powered=false,shape=ascending_south]");
            Reg(157, 8, "activator_rail[powered=true,shape=north_south]");
            Reg(157, 9, "activator_rail[powered=true,shape=east_west]");
            Reg(157, 10, "activator_rail[powered=true,shape=ascending_east]");
            Reg(157, 11, "activator_rail[powered=true,shape=ascending_west]");
            Reg(157, 12, "activator_rail[powered=true,shape=ascending_north]");
            Reg(157, 13, "activator_rail[powered=true,shape=ascending_south]");
            Reg(158, 0, "dropper[facing=down,triggered=false]");
            Reg(158, 1, "dropper[facing=up,triggered=false]");
            Reg(158, 2, "dropper[facing=north,triggered=false]");
            Reg(158, 3, "dropper[facing=south,triggered=false]");
            Reg(158, 4, "dropper[facing=west,triggered=false]");
            Reg(158, 5, "dropper[facing=east,triggered=false]");
            Reg(158, 8, "dropper[facing=down,triggered=true]");
            Reg(158, 9, "dropper[facing=up,triggered=true]");
            Reg(158, 10, "dropper[facing=north,triggered=true]");
            Reg(158, 11, "dropper[facing=south,triggered=true]");
            Reg(158, 12, "dropper[facing=west,triggered=true]");
            Reg(158, 13, "dropper[facing=east,triggered=true]");
            Reg(159, 0, "stained_hardened_clay[color=white]");
            Reg(159, 1, "stained_hardened_clay[color=orange]");
            Reg(159, 2, "stained_hardened_clay[color=magenta]");
            Reg(159, 3, "stained_hardened_clay[color=light_blue]");
            Reg(159, 4, "stained_hardened_clay[color=yellow]");
            Reg(159, 5, "stained_hardened_clay[color=lime]");
            Reg(159, 6, "stained_hardened_clay[color=pink]");
            Reg(159, 7, "stained_hardened_clay[color=gray]");
            Reg(159, 8, "stained_hardened_clay[color=silver]");
            Reg(159, 9, "stained_hardened_clay[color=cyan]");
            Reg(159, 10, "stained_hardened_clay[color=purple]");
            Reg(159, 11, "stained_hardened_clay[color=blue]");
            Reg(159, 12, "stained_hardened_clay[color=brown]");
            Reg(159, 13, "stained_hardened_clay[color=green]");
            Reg(159, 14, "stained_hardened_clay[color=red]");
            Reg(159, 15, "stained_hardened_clay[color=black]");
            Reg(160, 0, "stained_glass_pane[color=white,east=false,north=false,south=false,west=false]");
            Reg(160, 1, "stained_glass_pane[color=orange,east=false,north=false,south=false,west=false]");
            Reg(160, 2, "stained_glass_pane[color=magenta,east=false,north=false,south=false,west=false]");
            Reg(160, 3, "stained_glass_pane[color=light_blue,east=false,north=false,south=false,west=false]");
            Reg(160, 4, "stained_glass_pane[color=yellow,east=false,north=false,south=false,west=false]");
            Reg(160, 5, "stained_glass_pane[color=lime,east=false,north=false,south=false,west=false]");
            Reg(160, 6, "stained_glass_pane[color=pink,east=false,north=false,south=false,west=false]");
            Reg(160, 7, "stained_glass_pane[color=gray,east=false,north=false,south=false,west=false]");
            Reg(160, 8, "stained_glass_pane[color=silver,east=false,north=false,south=false,west=false]");
            Reg(160, 9, "stained_glass_pane[color=cyan,east=false,north=false,south=false,west=false]");
            Reg(160, 10, "stained_glass_pane[color=purple,east=false,north=false,south=false,west=false]");
            Reg(160, 11, "stained_glass_pane[color=blue,east=false,north=false,south=false,west=false]");
            Reg(160, 12, "stained_glass_pane[color=brown,east=false,north=false,south=false,west=false]");
            Reg(160, 13, "stained_glass_pane[color=green,east=false,north=false,south=false,west=false]");
            Reg(160, 14, "stained_glass_pane[color=red,east=false,north=false,south=false,west=false]");
            Reg(160, 15, "stained_glass_pane[color=black,east=false,north=false,south=false,west=false]");
            Reg(161, 0, "leaves2[check_decay=false,decayable=true,variant=acacia]");
            Reg(161, 1, "leaves2[check_decay=false,decayable=true,variant=dark_oak]");
            Reg(162, 0, "log2[axis=y,variant=acacia]");
            Reg(162, 1, "log2[axis=y,variant=dark_oak]");
            Reg(162, 4, "log2[axis=x,variant=acacia]");
            Reg(162, 5, "log2[axis=x,variant=dark_oak]");
            Reg(162, 8, "log2[axis=z,variant=acacia]");
            Reg(162, 9, "log2[axis=z,variant=dark_oak]");
            Reg(162, 12, "log2[axis=none,variant=acacia]");
            Reg(162, 13, "log2[axis=none,variant=dark_oak]");
            Reg(163, 0, "acacia_stairs[facing=east,half=bottom,shape=inner_left]");
            Reg(163, 1, "acacia_stairs[facing=west,half=bottom,shape=inner_left]");
            Reg(163, 2, "acacia_stairs[facing=south,half=bottom,shape=inner_left]");
            Reg(163, 3, "acacia_stairs[facing=north,half=bottom,shape=inner_left]");
            Reg(163, 4, "acacia_stairs[facing=east,half=top,shape=inner_left]");
            Reg(163, 5, "acacia_stairs[facing=west,half=top,shape=inner_left]");
            Reg(163, 6, "acacia_stairs[facing=south,half=top,shape=inner_left]");
            Reg(163, 7, "acacia_stairs[facing=north,half=top,shape=inner_left]");
            Reg(164, 0, "dark_oak_stairs[facing=east,half=bottom,shape=inner_left]");
            Reg(164, 1, "dark_oak_stairs[facing=west,half=bottom,shape=inner_left]");
            Reg(164, 2, "dark_oak_stairs[facing=south,half=bottom,shape=inner_left]");
            Reg(164, 3, "dark_oak_stairs[facing=north,half=bottom,shape=inner_left]");
            Reg(164, 4, "dark_oak_stairs[facing=east,half=top,shape=inner_left]");
            Reg(164, 5, "dark_oak_stairs[facing=west,half=top,shape=inner_left]");
            Reg(164, 6, "dark_oak_stairs[facing=south,half=top,shape=inner_left]");
            Reg(164, 7, "dark_oak_stairs[facing=north,half=top,shape=inner_left]");
            Reg(165, 0, "slime");
            Reg(166, 0, "barrier");
            Reg(167, 0, "iron_trapdoor[facing=north,half=bottom,open=false]");
            Reg(167, 1, "iron_trapdoor[facing=south,half=bottom,open=false]");
            Reg(167, 2, "iron_trapdoor[facing=west,half=bottom,open=false]");
            Reg(167, 3, "iron_trapdoor[facing=east,half=bottom,open=false]");
            Reg(167, 4, "iron_trapdoor[facing=north,half=bottom,open=true]");
            Reg(167, 5, "iron_trapdoor[facing=south,half=bottom,open=true]");
            Reg(167, 6, "iron_trapdoor[facing=west,half=bottom,open=true]");
            Reg(167, 7, "iron_trapdoor[facing=east,half=bottom,open=true]");
            Reg(167, 8, "iron_trapdoor[facing=north,half=top,open=false]");
            Reg(167, 9, "iron_trapdoor[facing=south,half=top,open=false]");
            Reg(167, 10, "iron_trapdoor[facing=west,half=top,open=false]");
            Reg(167, 11, "iron_trapdoor[facing=east,half=top,open=false]");
            Reg(167, 12, "iron_trapdoor[facing=north,half=top,open=true]");
            Reg(167, 13, "iron_trapdoor[facing=south,half=top,open=true]");
            Reg(167, 14, "iron_trapdoor[facing=west,half=top,open=true]");
            Reg(167, 15, "iron_trapdoor[facing=east,half=top,open=true]");
            Reg(168, 0, "prismarine[variant=prismarine]");
            Reg(168, 1, "prismarine[variant=prismarine_bricks]");
            Reg(168, 2, "prismarine[variant=dark_prismarine]");
            Reg(169, 0, "sea_lantern");
            Reg(170, 0, "hay_block[axis=y]");
            Reg(170, 4, "hay_block[axis=x]");
            Reg(170, 8, "hay_block[axis=z]");
            Reg(171, 0, "carpet[color=white]");
            Reg(171, 1, "carpet[color=orange]");
            Reg(171, 2, "carpet[color=magenta]");
            Reg(171, 3, "carpet[color=light_blue]");
            Reg(171, 4, "carpet[color=yellow]");
            Reg(171, 5, "carpet[color=lime]");
            Reg(171, 6, "carpet[color=pink]");
            Reg(171, 7, "carpet[color=gray]");
            Reg(171, 8, "carpet[color=silver]");
            Reg(171, 9, "carpet[color=cyan]");
            Reg(171, 10, "carpet[color=purple]");
            Reg(171, 11, "carpet[color=blue]");
            Reg(171, 12, "carpet[color=brown]");
            Reg(171, 13, "carpet[color=green]");
            Reg(171, 14, "carpet[color=red]");
            Reg(171, 15, "carpet[color=black]");
            Reg(172, 0, "hardened_clay");
            Reg(173, 0, "coal_block");
            Reg(174, 0, "packed_ice");
            Reg(175, 0, "double_plant[facing=east,half=lower,variant=sunflower]");
            Reg(175, 8, "double_plant[facing=east,half=lower,variant=sunflower]");
            Reg(175, 1, "double_plant[facing=east,half=lower,variant=syringa]");
            Reg(175, 9, "double_plant[facing=east,half=lower,variant=syringa]");
            Reg(175, 2, "double_plant[facing=east,half=lower,variant=double_grass]");
            Reg(175, 10, "double_plant[facing=east,half=lower,variant=double_grass]");
            Reg(175, 3, "double_plant[facing=east,half=lower,variant=double_fern]");
            Reg(175, 11, "double_plant[facing=east,half=lower,variant=double_fern]");
            Reg(175, 4, "double_plant[facing=east,half=lower,variant=double_rose]");
            Reg(175, 12, "double_plant[facing=east,half=lower,variant=double_rose]");
            Reg(175, 5, "double_plant[facing=east,half=lower,variant=paeonia]");
            Reg(175, 13, "double_plant[facing=south,half=upper,variant=double_fern]");
            Reg(176, 0, "standing_banner[rotation=0]");
            Reg(176, 1, "standing_banner[rotation=1]");
            Reg(176, 2, "standing_banner[rotation=2]");
            Reg(176, 3, "standing_banner[rotation=3]");
            Reg(176, 4, "standing_banner[rotation=4]");
            Reg(176, 5, "standing_banner[rotation=5]");
            Reg(176, 6, "standing_banner[rotation=6]");
            Reg(176, 7, "standing_banner[rotation=7]");
            Reg(176, 8, "standing_banner[rotation=8]");
            Reg(176, 9, "standing_banner[rotation=9]");
            Reg(176, 10, "standing_banner[rotation=10]");
            Reg(176, 11, "standing_banner[rotation=11]");
            Reg(176, 12, "standing_banner[rotation=12]");
            Reg(176, 13, "standing_banner[rotation=13]");
            Reg(176, 14, "standing_banner[rotation=14]");
            Reg(176, 15, "standing_banner[rotation=15]");
            Reg(177, 2, "wall_banner[facing=north]");
            Reg(177, 3, "wall_banner[facing=south]");
            Reg(177, 4, "wall_banner[facing=west]");
            Reg(177, 5, "wall_banner[facing=east]");
            Reg(178, 0, "daylight_detector_inverted[power=0]");
            Reg(178, 1, "daylight_detector_inverted[power=1]");
            Reg(178, 2, "daylight_detector_inverted[power=2]");
            Reg(178, 3, "daylight_detector_inverted[power=3]");
            Reg(178, 4, "daylight_detector_inverted[power=4]");
            Reg(178, 5, "daylight_detector_inverted[power=5]");
            Reg(178, 6, "daylight_detector_inverted[power=6]");
            Reg(178, 7, "daylight_detector_inverted[power=7]");
            Reg(178, 8, "daylight_detector_inverted[power=8]");
            Reg(178, 9, "daylight_detector_inverted[power=9]");
            Reg(178, 10, "daylight_detector_inverted[power=10]");
            Reg(178, 11, "daylight_detector_inverted[power=11]");
            Reg(178, 12, "daylight_detector_inverted[power=12]");
            Reg(178, 13, "daylight_detector_inverted[power=13]");
            Reg(178, 14, "daylight_detector_inverted[power=14]");
            Reg(178, 15, "daylight_detector_inverted[power=15]");
            Reg(179, 0, "red_sandstone[type=red_sandstone]");
            Reg(179, 1, "red_sandstone[type=chiseled_red_sandstone]");
            Reg(179, 2, "red_sandstone[type=smooth_red_sandstone]");
            Reg(180, 0, "red_sandstone_stairs[facing=east,half=bottom,shape=inner_left]");
            Reg(180, 1, "red_sandstone_stairs[facing=west,half=bottom,shape=inner_left]");
            Reg(180, 2, "red_sandstone_stairs[facing=south,half=bottom,shape=inner_left]");
            Reg(180, 3, "red_sandstone_stairs[facing=north,half=bottom,shape=inner_left]");
            Reg(180, 4, "red_sandstone_stairs[facing=east,half=top,shape=inner_left]");
            Reg(180, 5, "red_sandstone_stairs[facing=west,half=top,shape=inner_left]");
            Reg(180, 6, "red_sandstone_stairs[facing=south,half=top,shape=inner_left]");
            Reg(180, 7, "red_sandstone_stairs[facing=north,half=top,shape=inner_left]");
            Reg(181, 0, "double_stone_slab2[seamless=false,variant=red_sandstone]");
            Reg(181, 8, "double_stone_slab2[seamless=true,variant=red_sandstone]");
            Reg(182, 0, "stone_slab2[half=bottom,variant=red_sandstone]");
            Reg(182, 8, "stone_slab2[half=top,variant=red_sandstone]");
            Reg(183, 0, "spruce_fence_gate[facing=south,in_wall=false,open=false,powered=false]");
            Reg(183, 1, "spruce_fence_gate[facing=west,in_wall=false,open=false,powered=false]");
            Reg(183, 2, "spruce_fence_gate[facing=north,in_wall=false,open=false,powered=false]");
            Reg(183, 3, "spruce_fence_gate[facing=east,in_wall=false,open=false,powered=false]");
            Reg(183, 4, "spruce_fence_gate[facing=south,in_wall=false,open=true,powered=false]");
            Reg(183, 5, "spruce_fence_gate[facing=west,in_wall=false,open=true,powered=false]");
            Reg(183, 6, "spruce_fence_gate[facing=north,in_wall=false,open=true,powered=false]");
            Reg(183, 7, "spruce_fence_gate[facing=east,in_wall=false,open=true,powered=false]");
            Reg(183, 8, "spruce_fence_gate[facing=south,in_wall=false,open=false,powered=true]");
            Reg(183, 9, "spruce_fence_gate[facing=west,in_wall=false,open=false,powered=true]");
            Reg(183, 10, "spruce_fence_gate[facing=north,in_wall=false,open=false,powered=true]");
            Reg(183, 11, "spruce_fence_gate[facing=east,in_wall=false,open=false,powered=true]");
            Reg(183, 12, "spruce_fence_gate[facing=south,in_wall=false,open=true,powered=true]");
            Reg(183, 13, "spruce_fence_gate[facing=west,in_wall=false,open=true,powered=true]");
            Reg(183, 14, "spruce_fence_gate[facing=north,in_wall=false,open=true,powered=true]");
            Reg(183, 15, "spruce_fence_gate[facing=east,in_wall=false,open=true,powered=true]");
            Reg(184, 0, "birch_fence_gate[facing=south,in_wall=false,open=false,powered=false]");
            Reg(184, 1, "birch_fence_gate[facing=west,in_wall=false,open=false,powered=false]");
            Reg(184, 2, "birch_fence_gate[facing=north,in_wall=false,open=false,powered=false]");
            Reg(184, 3, "birch_fence_gate[facing=east,in_wall=false,open=false,powered=false]");
            Reg(184, 4, "birch_fence_gate[facing=south,in_wall=false,open=true,powered=false]");
            Reg(184, 5, "birch_fence_gate[facing=west,in_wall=false,open=true,powered=false]");
            Reg(184, 6, "birch_fence_gate[facing=north,in_wall=false,open=true,powered=false]");
            Reg(184, 7, "birch_fence_gate[facing=east,in_wall=false,open=true,powered=false]");
            Reg(184, 8, "birch_fence_gate[facing=south,in_wall=false,open=false,powered=true]");
            Reg(184, 9, "birch_fence_gate[facing=west,in_wall=false,open=false,powered=true]");
            Reg(184, 10, "birch_fence_gate[facing=north,in_wall=false,open=false,powered=true]");
            Reg(184, 11, "birch_fence_gate[facing=east,in_wall=false,open=false,powered=true]");
            Reg(184, 12, "birch_fence_gate[facing=south,in_wall=false,open=true,powered=true]");
            Reg(184, 13, "birch_fence_gate[facing=west,in_wall=false,open=true,powered=true]");
            Reg(184, 14, "birch_fence_gate[facing=north,in_wall=false,open=true,powered=true]");
            Reg(184, 15, "birch_fence_gate[facing=east,in_wall=false,open=true,powered=true]");
            Reg(185, 0, "jungle_fence_gate[facing=south,in_wall=false,open=false,powered=false]");
            Reg(185, 1, "jungle_fence_gate[facing=west,in_wall=false,open=false,powered=false]");
            Reg(185, 2, "jungle_fence_gate[facing=north,in_wall=false,open=false,powered=false]");
            Reg(185, 3, "jungle_fence_gate[facing=east,in_wall=false,open=false,powered=false]");
            Reg(185, 4, "jungle_fence_gate[facing=south,in_wall=false,open=true,powered=false]");
            Reg(185, 5, "jungle_fence_gate[facing=west,in_wall=false,open=true,powered=false]");
            Reg(185, 6, "jungle_fence_gate[facing=north,in_wall=false,open=true,powered=false]");
            Reg(185, 7, "jungle_fence_gate[facing=east,in_wall=false,open=true,powered=false]");
            Reg(185, 8, "jungle_fence_gate[facing=south,in_wall=false,open=false,powered=true]");
            Reg(185, 9, "jungle_fence_gate[facing=west,in_wall=false,open=false,powered=true]");
            Reg(185, 10, "jungle_fence_gate[facing=north,in_wall=false,open=false,powered=true]");
            Reg(185, 11, "jungle_fence_gate[facing=east,in_wall=false,open=false,powered=true]");
            Reg(185, 12, "jungle_fence_gate[facing=south,in_wall=false,open=true,powered=true]");
            Reg(185, 13, "jungle_fence_gate[facing=west,in_wall=false,open=true,powered=true]");
            Reg(185, 14, "jungle_fence_gate[facing=north,in_wall=false,open=true,powered=true]");
            Reg(185, 15, "jungle_fence_gate[facing=east,in_wall=false,open=true,powered=true]");
            Reg(186, 0, "dark_oak_fence_gate[facing=south,in_wall=false,open=false,powered=false]");
            Reg(186, 1, "dark_oak_fence_gate[facing=west,in_wall=false,open=false,powered=false]");
            Reg(186, 2, "dark_oak_fence_gate[facing=north,in_wall=false,open=false,powered=false]");
            Reg(186, 3, "dark_oak_fence_gate[facing=east,in_wall=false,open=false,powered=false]");
            Reg(186, 4, "dark_oak_fence_gate[facing=south,in_wall=false,open=true,powered=false]");
            Reg(186, 5, "dark_oak_fence_gate[facing=west,in_wall=false,open=true,powered=false]");
            Reg(186, 6, "dark_oak_fence_gate[facing=north,in_wall=false,open=true,powered=false]");
            Reg(186, 7, "dark_oak_fence_gate[facing=east,in_wall=false,open=true,powered=false]");
            Reg(186, 8, "dark_oak_fence_gate[facing=south,in_wall=false,open=false,powered=true]");
            Reg(186, 9, "dark_oak_fence_gate[facing=west,in_wall=false,open=false,powered=true]");
            Reg(186, 10, "dark_oak_fence_gate[facing=north,in_wall=false,open=false,powered=true]");
            Reg(186, 11, "dark_oak_fence_gate[facing=east,in_wall=false,open=false,powered=true]");
            Reg(186, 12, "dark_oak_fence_gate[facing=south,in_wall=false,open=true,powered=true]");
            Reg(186, 13, "dark_oak_fence_gate[facing=west,in_wall=false,open=true,powered=true]");
            Reg(186, 14, "dark_oak_fence_gate[facing=north,in_wall=false,open=true,powered=true]");
            Reg(186, 15, "dark_oak_fence_gate[facing=east,in_wall=false,open=true,powered=true]");
            Reg(187, 0, "acacia_fence_gate[facing=south,in_wall=false,open=false,powered=false]");
            Reg(187, 1, "acacia_fence_gate[facing=west,in_wall=false,open=false,powered=false]");
            Reg(187, 2, "acacia_fence_gate[facing=north,in_wall=false,open=false,powered=false]");
            Reg(187, 3, "acacia_fence_gate[facing=east,in_wall=false,open=false,powered=false]");
            Reg(187, 4, "acacia_fence_gate[facing=south,in_wall=false,open=true,powered=false]");
            Reg(187, 5, "acacia_fence_gate[facing=west,in_wall=false,open=true,powered=false]");
            Reg(187, 6, "acacia_fence_gate[facing=north,in_wall=false,open=true,powered=false]");
            Reg(187, 7, "acacia_fence_gate[facing=east,in_wall=false,open=true,powered=false]");
            Reg(187, 8, "acacia_fence_gate[facing=south,in_wall=false,open=false,powered=true]");
            Reg(187, 9, "acacia_fence_gate[facing=west,in_wall=false,open=false,powered=true]");
            Reg(187, 10, "acacia_fence_gate[facing=north,in_wall=false,open=false,powered=true]");
            Reg(187, 11, "acacia_fence_gate[facing=east,in_wall=false,open=false,powered=true]");
            Reg(187, 12, "acacia_fence_gate[facing=south,in_wall=false,open=true,powered=true]");
            Reg(187, 13, "acacia_fence_gate[facing=west,in_wall=false,open=true,powered=true]");
            Reg(187, 14, "acacia_fence_gate[facing=north,in_wall=false,open=true,powered=true]");
            Reg(187, 15, "acacia_fence_gate[facing=east,in_wall=false,open=true,powered=true]");
            Reg(188, 0, "spruce_fence");
            Reg(189, 0, "birch_fence");
            Reg(190, 0, "jungle_fence");
            Reg(191, 0, "dark_oak_fence");
            Reg(192, 0, "acacia_fence");
            Reg(193, 0, "spruce_door[facing=east,half=lower,hinge=left,open=false,powered=false]");
            Reg(193, 1, "spruce_door[facing=south,half=lower,hinge=left,open=false,powered=false]");
            Reg(193, 2, "spruce_door[facing=west,half=lower,hinge=left,open=false,powered=false]");
            Reg(193, 3, "spruce_door[facing=north,half=lower,hinge=left,open=false,powered=false]");
            Reg(193, 4, "spruce_door[facing=east,half=lower,hinge=left,open=true,powered=false]");
            Reg(193, 5, "spruce_door[facing=south,half=lower,hinge=left,open=true,powered=false]");
            Reg(193, 6, "spruce_door[facing=west,half=lower,hinge=left,open=true,powered=false]");
            Reg(193, 7, "spruce_door[facing=north,half=lower,hinge=left,open=true,powered=false]");
            Reg(193, 8, "spruce_door[facing=east,half=upper,hinge=left,open=false,powered=false]");
            Reg(193, 9, "spruce_door[facing=east,half=upper,hinge=right,open=false,powered=false]");
            Reg(193, 10, "spruce_door[facing=east,half=upper,hinge=left,open=false,powered=true]");
            Reg(193, 11, "spruce_door[facing=east,half=upper,hinge=right,open=false,powered=true]");
            Reg(194, 0, "birch_door[facing=east,half=lower,hinge=left,open=false,powered=false]");
            Reg(194, 1, "birch_door[facing=south,half=lower,hinge=left,open=false,powered=false]");
            Reg(194, 2, "birch_door[facing=west,half=lower,hinge=left,open=false,powered=false]");
            Reg(194, 3, "birch_door[facing=north,half=lower,hinge=left,open=false,powered=false]");
            Reg(194, 4, "birch_door[facing=east,half=lower,hinge=left,open=true,powered=false]");
            Reg(194, 5, "birch_door[facing=south,half=lower,hinge=left,open=true,powered=false]");
            Reg(194, 6, "birch_door[facing=west,half=lower,hinge=left,open=true,powered=false]");
            Reg(194, 7, "birch_door[facing=north,half=lower,hinge=left,open=true,powered=false]");
            Reg(194, 8, "birch_door[facing=east,half=upper,hinge=left,open=false,powered=false]");
            Reg(194, 9, "birch_door[facing=east,half=upper,hinge=right,open=false,powered=false]");
            Reg(194, 10, "birch_door[facing=east,half=upper,hinge=left,open=false,powered=true]");
            Reg(194, 11, "birch_door[facing=east,half=upper,hinge=right,open=false,powered=true]");
            Reg(195, 0, "jungle_door[facing=east,half=lower,hinge=left,open=false,powered=false]");
            Reg(195, 1, "jungle_door[facing=south,half=lower,hinge=left,open=false,powered=false]");
            Reg(195, 2, "jungle_door[facing=west,half=lower,hinge=left,open=false,powered=false]");
            Reg(195, 3, "jungle_door[facing=north,half=lower,hinge=left,open=false,powered=false]");
            Reg(195, 4, "jungle_door[facing=east,half=lower,hinge=left,open=true,powered=false]");
            Reg(195, 5, "jungle_door[facing=south,half=lower,hinge=left,open=true,powered=false]");
            Reg(195, 6, "jungle_door[facing=west,half=lower,hinge=left,open=true,powered=false]");
            Reg(195, 7, "jungle_door[facing=north,half=lower,hinge=left,open=true,powered=false]");
            Reg(195, 8, "jungle_door[facing=east,half=upper,hinge=left,open=false,powered=false]");
            Reg(195, 9, "jungle_door[facing=east,half=upper,hinge=right,open=false,powered=false]");
            Reg(195, 10, "jungle_door[facing=east,half=upper,hinge=left,open=false,powered=true]");
            Reg(195, 11, "jungle_door[facing=east,half=upper,hinge=right,open=false,powered=true]");
            Reg(196, 0, "acacia_door[facing=east,half=lower,hinge=left,open=false,powered=false]");
            Reg(196, 1, "acacia_door[facing=south,half=lower,hinge=left,open=false,powered=false]");
            Reg(196, 2, "acacia_door[facing=west,half=lower,hinge=left,open=false,powered=false]");
            Reg(196, 3, "acacia_door[facing=north,half=lower,hinge=left,open=false,powered=false]");
            Reg(196, 4, "acacia_door[facing=east,half=lower,hinge=left,open=true,powered=false]");
            Reg(196, 5, "acacia_door[facing=south,half=lower,hinge=left,open=true,powered=false]");
            Reg(196, 6, "acacia_door[facing=west,half=lower,hinge=left,open=true,powered=false]");
            Reg(196, 7, "acacia_door[facing=north,half=lower,hinge=left,open=true,powered=false]");
            Reg(196, 8, "acacia_door[facing=east,half=upper,hinge=left,open=false,powered=false]");
            Reg(196, 9, "acacia_door[facing=east,half=upper,hinge=right,open=false,powered=false]");
            Reg(196, 10, "acacia_door[facing=east,half=upper,hinge=left,open=false,powered=true]");
            Reg(196, 11, "acacia_door[facing=east,half=upper,hinge=right,open=false,powered=true]");
            Reg(197, 0, "dark_oak_door[facing=east,half=lower,hinge=left,open=false,powered=false]");
            Reg(197, 1, "dark_oak_door[facing=south,half=lower,hinge=left,open=false,powered=false]");
            Reg(197, 2, "dark_oak_door[facing=west,half=lower,hinge=left,open=false,powered=false]");
            Reg(197, 3, "dark_oak_door[facing=north,half=lower,hinge=left,open=false,powered=false]");
            Reg(197, 4, "dark_oak_door[facing=east,half=lower,hinge=left,open=true,powered=false]");
            Reg(197, 5, "dark_oak_door[facing=south,half=lower,hinge=left,open=true,powered=false]");
            Reg(197, 6, "dark_oak_door[facing=west,half=lower,hinge=left,open=true,powered=false]");
            Reg(197, 7, "dark_oak_door[facing=north,half=lower,hinge=left,open=true,powered=false]");
            Reg(197, 8, "dark_oak_door[facing=east,half=upper,hinge=left,open=false,powered=false]");
            Reg(197, 9, "dark_oak_door[facing=east,half=upper,hinge=right,open=false,powered=false]");
            Reg(197, 10, "dark_oak_door[facing=east,half=upper,hinge=left,open=false,powered=true]");
            Reg(197, 11, "dark_oak_door[facing=east,half=upper,hinge=right,open=false,powered=true]");
            Reg(198, 0, "end_rod[facing=down]");
            Reg(198, 1, "end_rod[facing=up]");
            Reg(198, 2, "end_rod[facing=north]");
            Reg(198, 3, "end_rod[facing=south]");
            Reg(198, 4, "end_rod[facing=west]");
            Reg(198, 5, "end_rod[facing=east]");
            Reg(199, 0, "chorus_plant");
            Reg(200, 0, "chorus_flower[age=0]");
            Reg(200, 1, "chorus_flower[age=1]");
            Reg(200, 2, "chorus_flower[age=2]");
            Reg(200, 3, "chorus_flower[age=3]");
            Reg(200, 4, "chorus_flower[age=4]");
            Reg(200, 5, "chorus_flower[age=5]");
            Reg(201, 0, "purpur_block");
            Reg(202, 0, "purpur_pillar[axis=y]");
            Reg(202, 4, "purpur_pillar[axis=x]");
            Reg(202, 8, "purpur_pillar[axis=z]");
            Reg(203, 0, "purpur_stairs[facing=east,half=bottom,shape=inner_left]");
            Reg(203, 1, "purpur_stairs[facing=west,half=bottom,shape=inner_left]");
            Reg(203, 2, "purpur_stairs[facing=south,half=bottom,shape=inner_left]");
            Reg(203, 3, "purpur_stairs[facing=north,half=bottom,shape=inner_left]");
            Reg(203, 4, "purpur_stairs[facing=east,half=top,shape=inner_left]");
            Reg(203, 5, "purpur_stairs[facing=west,half=top,shape=inner_left]");
            Reg(203, 6, "purpur_stairs[facing=south,half=top,shape=inner_left]");
            Reg(203, 7, "purpur_stairs[facing=north,half=top,shape=inner_left]");
            Reg(204, 0, "purpur_double_slab[variant=default]");
            Reg(205, 0, "purpur_slab[half=bottom,variant=default]");
            Reg(205, 8, "purpur_slab[half=top,variant=default]");
            Reg(206, 0, "end_bricks");
            Reg(207, 0, "beetroots[age=0]");
            Reg(207, 1, "beetroots[age=1]");
            Reg(207, 2, "beetroots[age=2]");
            Reg(207, 3, "beetroots[age=3]");
            Reg(208, 0, "grass_path");
            Reg(209, 0, "end_gateway");
            Reg(210, 0, "repeating_command_block[conditional=false,facing=down]");
            Reg(210, 1, "repeating_command_block[conditional=false,facing=up]");
            Reg(210, 2, "repeating_command_block[conditional=false,facing=north]");
            Reg(210, 3, "repeating_command_block[conditional=false,facing=south]");
            Reg(210, 4, "repeating_command_block[conditional=false,facing=west]");
            Reg(210, 5, "repeating_command_block[conditional=false,facing=east]");
            Reg(210, 8, "repeating_command_block[conditional=true,facing=down]");
            Reg(210, 9, "repeating_command_block[conditional=true,facing=up]");
            Reg(210, 10, "repeating_command_block[conditional=true,facing=north]");
            Reg(210, 11, "repeating_command_block[conditional=true,facing=south]");
            Reg(210, 12, "repeating_command_block[conditional=true,facing=west]");
            Reg(210, 13, "repeating_command_block[conditional=true,facing=east]");
            Reg(211, 0, "chain_command_block[conditional=false,facing=down]");
            Reg(211, 1, "chain_command_block[conditional=false,facing=up]");
            Reg(211, 2, "chain_command_block[conditional=false,facing=north]");
            Reg(211, 3, "chain_command_block[conditional=false,facing=south]");
            Reg(211, 4, "chain_command_block[conditional=false,facing=west]");
            Reg(211, 5, "chain_command_block[conditional=false,facing=east]");
            Reg(211, 8, "chain_command_block[conditional=true,facing=down]");
            Reg(211, 9, "chain_command_block[conditional=true,facing=up]");
            Reg(211, 10, "chain_command_block[conditional=true,facing=north]");
            Reg(211, 11, "chain_command_block[conditional=true,facing=south]");
            Reg(211, 12, "chain_command_block[conditional=true,facing=west]");
            Reg(211, 13, "chain_command_block[conditional=true,facing=east]");
            Reg(212, 0, "frosted_ice[age=0]");
            Reg(212, 1, "frosted_ice[age=1]");
            Reg(212, 2, "frosted_ice[age=2]");
            Reg(212, 3, "frosted_ice[age=3]");
            Reg(213, 0, "magma");
            Reg(214, 0, "nether_wart_block");
            Reg(215, 0, "red_nether_brick");
            Reg(216, 0, "bone_block[axis=y]");
            Reg(216, 4, "bone_block[axis=x]");
            Reg(216, 8, "bone_block[axis=z]");
            Reg(217, 0, "structure_void");
            Reg(218, 0, "observer[facing=down,powered=false]");
            Reg(218, 1, "observer[facing=up,powered=false]");
            Reg(218, 2, "observer[facing=north,powered=false]");
            Reg(218, 3, "observer[facing=south,powered=false]");
            Reg(218, 4, "observer[facing=west,powered=false]");
            Reg(218, 5, "observer[facing=east,powered=false]");
            Reg(218, 8, "observer[facing=down,powered=true]");
            Reg(218, 9, "observer[facing=up,powered=true]");
            Reg(218, 10, "observer[facing=north,powered=true]");
            Reg(218, 11, "observer[facing=south,powered=true]");
            Reg(218, 12, "observer[facing=west,powered=true]");
            Reg(218, 13, "observer[facing=east,powered=true]");
            Reg(219, 0, "white_shulker_box[facing=down]");
            Reg(219, 1, "white_shulker_box[facing=up]");
            Reg(219, 2, "white_shulker_box[facing=north]");
            Reg(219, 3, "white_shulker_box[facing=south]");
            Reg(219, 4, "white_shulker_box[facing=west]");
            Reg(219, 5, "white_shulker_box[facing=east]");
            Reg(220, 0, "orange_shulker_box[facing=down]");
            Reg(220, 1, "orange_shulker_box[facing=up]");
            Reg(220, 2, "orange_shulker_box[facing=north]");
            Reg(220, 3, "orange_shulker_box[facing=south]");
            Reg(220, 4, "orange_shulker_box[facing=west]");
            Reg(220, 5, "orange_shulker_box[facing=east]");
            Reg(221, 0, "magenta_shulker_box[facing=down]");
            Reg(221, 1, "magenta_shulker_box[facing=up]");
            Reg(221, 2, "magenta_shulker_box[facing=north]");
            Reg(221, 3, "magenta_shulker_box[facing=south]");
            Reg(221, 4, "magenta_shulker_box[facing=west]");
            Reg(221, 5, "magenta_shulker_box[facing=east]");
            Reg(222, 0, "light_blue_shulker_box[facing=down]");
            Reg(222, 1, "light_blue_shulker_box[facing=up]");
            Reg(222, 2, "light_blue_shulker_box[facing=north]");
            Reg(222, 3, "light_blue_shulker_box[facing=south]");
            Reg(222, 4, "light_blue_shulker_box[facing=west]");
            Reg(222, 5, "light_blue_shulker_box[facing=east]");
            Reg(223, 0, "yellow_shulker_box[facing=down]");
            Reg(223, 1, "yellow_shulker_box[facing=up]");
            Reg(223, 2, "yellow_shulker_box[facing=north]");
            Reg(223, 3, "yellow_shulker_box[facing=south]");
            Reg(223, 4, "yellow_shulker_box[facing=west]");
            Reg(223, 5, "yellow_shulker_box[facing=east]");
            Reg(224, 0, "lime_shulker_box[facing=down]");
            Reg(224, 1, "lime_shulker_box[facing=up]");
            Reg(224, 2, "lime_shulker_box[facing=north]");
            Reg(224, 3, "lime_shulker_box[facing=south]");
            Reg(224, 4, "lime_shulker_box[facing=west]");
            Reg(224, 5, "lime_shulker_box[facing=east]");
            Reg(225, 0, "pink_shulker_box[facing=down]");
            Reg(225, 1, "pink_shulker_box[facing=up]");
            Reg(225, 2, "pink_shulker_box[facing=north]");
            Reg(225, 3, "pink_shulker_box[facing=south]");
            Reg(225, 4, "pink_shulker_box[facing=west]");
            Reg(225, 5, "pink_shulker_box[facing=east]");
            Reg(226, 0, "gray_shulker_box[facing=down]");
            Reg(226, 1, "gray_shulker_box[facing=up]");
            Reg(226, 2, "gray_shulker_box[facing=north]");
            Reg(226, 3, "gray_shulker_box[facing=south]");
            Reg(226, 4, "gray_shulker_box[facing=west]");
            Reg(226, 5, "gray_shulker_box[facing=east]");
            Reg(227, 0, "silver_shulker_box[facing=down]");
            Reg(227, 1, "silver_shulker_box[facing=up]");
            Reg(227, 2, "silver_shulker_box[facing=north]");
            Reg(227, 3, "silver_shulker_box[facing=south]");
            Reg(227, 4, "silver_shulker_box[facing=west]");
            Reg(227, 5, "silver_shulker_box[facing=east]");
            Reg(228, 0, "cyan_shulker_box[facing=down]");
            Reg(228, 1, "cyan_shulker_box[facing=up]");
            Reg(228, 2, "cyan_shulker_box[facing=north]");
            Reg(228, 3, "cyan_shulker_box[facing=south]");
            Reg(228, 4, "cyan_shulker_box[facing=west]");
            Reg(228, 5, "cyan_shulker_box[facing=east]");
            Reg(229, 0, "purple_shulker_box[facing=down]");
            Reg(229, 1, "purple_shulker_box[facing=up]");
            Reg(229, 2, "purple_shulker_box[facing=north]");
            Reg(229, 3, "purple_shulker_box[facing=south]");
            Reg(229, 4, "purple_shulker_box[facing=west]");
            Reg(229, 5, "purple_shulker_box[facing=east]");
            Reg(230, 0, "blue_shulker_box[facing=down]");
            Reg(230, 1, "blue_shulker_box[facing=up]");
            Reg(230, 2, "blue_shulker_box[facing=north]");
            Reg(230, 3, "blue_shulker_box[facing=south]");
            Reg(230, 4, "blue_shulker_box[facing=west]");
            Reg(230, 5, "blue_shulker_box[facing=east]");
            Reg(231, 0, "brown_shulker_box[facing=down]");
            Reg(231, 1, "brown_shulker_box[facing=up]");
            Reg(231, 2, "brown_shulker_box[facing=north]");
            Reg(231, 3, "brown_shulker_box[facing=south]");
            Reg(231, 4, "brown_shulker_box[facing=west]");
            Reg(231, 5, "brown_shulker_box[facing=east]");
            Reg(232, 0, "green_shulker_box[facing=down]");
            Reg(232, 1, "green_shulker_box[facing=up]");
            Reg(232, 2, "green_shulker_box[facing=north]");
            Reg(232, 3, "green_shulker_box[facing=south]");
            Reg(232, 4, "green_shulker_box[facing=west]");
            Reg(232, 5, "green_shulker_box[facing=east]");
            Reg(233, 0, "red_shulker_box[facing=down]");
            Reg(233, 1, "red_shulker_box[facing=up]");
            Reg(233, 2, "red_shulker_box[facing=north]");
            Reg(233, 3, "red_shulker_box[facing=south]");
            Reg(233, 4, "red_shulker_box[facing=west]");
            Reg(233, 5, "red_shulker_box[facing=east]");
            Reg(234, 0, "black_shulker_box[facing=down]");
            Reg(234, 1, "black_shulker_box[facing=up]");
            Reg(234, 2, "black_shulker_box[facing=north]");
            Reg(234, 3, "black_shulker_box[facing=south]");
            Reg(234, 4, "black_shulker_box[facing=west]");
            Reg(234, 5, "black_shulker_box[facing=east]");
            Reg(235, 0, "white_glazed_terracotta[facing=south]");
            Reg(235, 1, "white_glazed_terracotta[facing=west]");
            Reg(235, 2, "white_glazed_terracotta[facing=north]");
            Reg(235, 3, "white_glazed_terracotta[facing=east]");
            Reg(236, 0, "orange_glazed_terracotta[facing=south]");
            Reg(236, 1, "orange_glazed_terracotta[facing=west]");
            Reg(236, 2, "orange_glazed_terracotta[facing=north]");
            Reg(236, 3, "orange_glazed_terracotta[facing=east]");
            Reg(237, 0, "magenta_glazed_terracotta[facing=south]");
            Reg(237, 1, "magenta_glazed_terracotta[facing=west]");
            Reg(237, 2, "magenta_glazed_terracotta[facing=north]");
            Reg(237, 3, "magenta_glazed_terracotta[facing=east]");
            Reg(238, 0, "light_blue_glazed_terracotta[facing=south]");
            Reg(238, 1, "light_blue_glazed_terracotta[facing=west]");
            Reg(238, 2, "light_blue_glazed_terracotta[facing=north]");
            Reg(238, 3, "light_blue_glazed_terracotta[facing=east]");
            Reg(239, 0, "yellow_glazed_terracotta[facing=south]");
            Reg(239, 1, "yellow_glazed_terracotta[facing=west]");
            Reg(239, 2, "yellow_glazed_terracotta[facing=north]");
            Reg(239, 3, "yellow_glazed_terracotta[facing=east]");
            Reg(240, 0, "lime_glazed_terracotta[facing=south]");
            Reg(240, 1, "lime_glazed_terracotta[facing=west]");
            Reg(240, 2, "lime_glazed_terracotta[facing=north]");
            Reg(240, 3, "lime_glazed_terracotta[facing=east]");
            Reg(241, 0, "pink_glazed_terracotta[facing=south]");
            Reg(241, 1, "pink_glazed_terracotta[facing=west]");
            Reg(241, 2, "pink_glazed_terracotta[facing=north]");
            Reg(241, 3, "pink_glazed_terracotta[facing=east]");
            Reg(242, 0, "gray_glazed_terracotta[facing=south]");
            Reg(242, 1, "gray_glazed_terracotta[facing=west]");
            Reg(242, 2, "gray_glazed_terracotta[facing=north]");
            Reg(242, 3, "gray_glazed_terracotta[facing=east]");
            Reg(243, 0, "silver_glazed_terracotta[facing=south]");
            Reg(243, 1, "silver_glazed_terracotta[facing=west]");
            Reg(243, 2, "silver_glazed_terracotta[facing=north]");
            Reg(243, 3, "silver_glazed_terracotta[facing=east]");
            Reg(244, 0, "cyan_glazed_terracotta[facing=south]");
            Reg(244, 1, "cyan_glazed_terracotta[facing=west]");
            Reg(244, 2, "cyan_glazed_terracotta[facing=north]");
            Reg(244, 3, "cyan_glazed_terracotta[facing=east]");
            Reg(245, 0, "purple_glazed_terracotta[facing=south]");
            Reg(245, 1, "purple_glazed_terracotta[facing=west]");
            Reg(245, 2, "purple_glazed_terracotta[facing=north]");
            Reg(245, 3, "purple_glazed_terracotta[facing=east]");
            Reg(246, 0, "blue_glazed_terracotta[facing=south]");
            Reg(246, 1, "blue_glazed_terracotta[facing=west]");
            Reg(246, 2, "blue_glazed_terracotta[facing=north]");
            Reg(246, 3, "blue_glazed_terracotta[facing=east]");
            Reg(247, 0, "brown_glazed_terracotta[facing=south]");
            Reg(247, 1, "brown_glazed_terracotta[facing=west]");
            Reg(247, 2, "brown_glazed_terracotta[facing=north]");
            Reg(247, 3, "brown_glazed_terracotta[facing=east]");
            Reg(248, 0, "green_glazed_terracotta[facing=south]");
            Reg(248, 1, "green_glazed_terracotta[facing=west]");
            Reg(248, 2, "green_glazed_terracotta[facing=north]");
            Reg(248, 3, "green_glazed_terracotta[facing=east]");
            Reg(249, 0, "red_glazed_terracotta[facing=south]");
            Reg(249, 1, "red_glazed_terracotta[facing=west]");
            Reg(249, 2, "red_glazed_terracotta[facing=north]");
            Reg(249, 3, "red_glazed_terracotta[facing=east]");
            Reg(250, 0, "black_glazed_terracotta[facing=south]");
            Reg(250, 1, "black_glazed_terracotta[facing=west]");
            Reg(250, 2, "black_glazed_terracotta[facing=north]");
            Reg(250, 3, "black_glazed_terracotta[facing=east]");
            Reg(251, 0, "concrete[color=white]");
            Reg(251, 1, "concrete[color=orange]");
            Reg(251, 2, "concrete[color=magenta]");
            Reg(251, 3, "concrete[color=light_blue]");
            Reg(251, 4, "concrete[color=yellow]");
            Reg(251, 5, "concrete[color=lime]");
            Reg(251, 6, "concrete[color=pink]");
            Reg(251, 7, "concrete[color=gray]");
            Reg(251, 8, "concrete[color=silver]");
            Reg(251, 9, "concrete[color=cyan]");
            Reg(251, 10, "concrete[color=purple]");
            Reg(251, 11, "concrete[color=blue]");
            Reg(251, 12, "concrete[color=brown]");
            Reg(251, 13, "concrete[color=green]");
            Reg(251, 14, "concrete[color=red]");
            Reg(251, 15, "concrete[color=black]");
            Reg(252, 0, "concrete_powder[color=white]");
            Reg(252, 1, "concrete_powder[color=orange]");
            Reg(252, 2, "concrete_powder[color=magenta]");
            Reg(252, 3, "concrete_powder[color=light_blue]");
            Reg(252, 4, "concrete_powder[color=yellow]");
            Reg(252, 5, "concrete_powder[color=lime]");
            Reg(252, 6, "concrete_powder[color=pink]");
            Reg(252, 7, "concrete_powder[color=gray]");
            Reg(252, 8, "concrete_powder[color=silver]");
            Reg(252, 9, "concrete_powder[color=cyan]");
            Reg(252, 10, "concrete_powder[color=purple]");
            Reg(252, 11, "concrete_powder[color=blue]");
            Reg(252, 12, "concrete_powder[color=brown]");
            Reg(252, 13, "concrete_powder[color=green]");
            Reg(252, 14, "concrete_powder[color=red]");
            Reg(252, 15, "concrete_powder[color=black]");
            Reg(255, 0, "structure_block[mode=save]");
            Reg(255, 1, "structure_block[mode=load]");
            Reg(255, 2, "structure_block[mode=corner]");
            Reg(255, 3, "structure_block[mode=data]");
            Reg(26, 4, "bed[facing=south,occupied=false,part=foot]");
            Reg(26, 5, "bed[facing=west,occupied=false,part=foot]");
            Reg(26, 6, "bed[facing=north,occupied=false,part=foot]");
            Reg(26, 7, "bed[facing=east,occupied=false,part=foot]");
            Reg(69, 16, "lever");
            Reg(71, 16, "iron_door");
            Reg(64, 16, "wooden_door");
            Reg(193, 16, "spruce_door");
            Reg(194, 16, "birch_door");
            Reg(195, 16, "jungle_door");
            Reg(196, 16, "acacia_door");
            Reg(197, 16, "dark_oak_door");
            Reg(69, 16, "repeater");
            Reg(77, 16, "stone_button");
            Reg(99, 16, "brown_mushroom_block");
            Reg(100, 16, "red_mushroom_block");
            Reg(99, 16, "brown_mushroom_block[variant=stem]");
            Reg(143, 16, "wooden_button");
            Reg(144, 0, "skull");
            Reg(106, 16, "vine");
            Reg(86, 0, "pumpkin");
            Reg(104, 0, "pumpkin_stem");
            Reg(105, 0, "melon_stem");
            Reg(107, 16, "oak_fence_gate");
            Reg(183, 16, "spruce_fence_gate");
            Reg(184, 16, "birch_fence_gate");
            Reg(185, 16, "jungle_fence_gate");
            Reg(186, 16, "dark_oak_fence_gate");
            Reg(187, 16, "acacia_fence_gate");
            Reg(132, 16, "tripwire");
        }
    }
}
